<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YingLong</title>
  
  <subtitle>虽奔放不羁，但也自我束缚</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yaoyinglong.github.io/"/>
  <updated>2020-06-19T01:57:12.119Z</updated>
  <id>https://yaoyinglong.github.io/</id>
  
  <author>
    <name>YaoYingLong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux常用技巧</title>
    <link href="https://yaoyinglong.github.io/Blog/Linux/Linux%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://yaoyinglong.github.io/Blog/Linux/Linux常用技巧/</id>
    <published>2020-06-19T01:57:12.119Z</published>
    <updated>2020-06-19T01:57:12.119Z</updated>
    
    <content type="html"><![CDATA[<h3 id="SecureCRT无操作自动登出"><a href="#SecureCRT无操作自动登出" class="headerlink" title="SecureCRT无操作自动登出"></a>SecureCRT无操作自动登出</h3><p><code>echo $TMOUT</code> 查看无操作自动登出时间，将该时间稍微调小一点设置到SecureCRT Session中</p><p><img src="../../../../images/CRT永不超时设置.png" alt="CRT不超时设置"></p><h3 id="SecureCRT文件上传下载"><a href="#SecureCRT文件上传下载" class="headerlink" title="SecureCRT文件上传下载"></a>SecureCRT文件上传下载</h3><p><code>rz</code>：将文件从本地上传到服务器</p><p><code>sz [file1] [file2] [dir/*]</code>：本地从服务器上下载文件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;SecureCRT无操作自动登出&quot;&gt;&lt;a href=&quot;#SecureCRT无操作自动登出&quot; class=&quot;headerlink&quot; title=&quot;SecureCRT无操作自动登出&quot;&gt;&lt;/a&gt;SecureCRT无操作自动登出&lt;/h3&gt;&lt;p&gt;&lt;code&gt;echo $TM
      
    
    </summary>
    
      <category term="Linux" scheme="https://yaoyinglong.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://yaoyinglong.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Spring常面问题</title>
    <link href="https://yaoyinglong.github.io/Blog/Interview/Spring%E5%B8%B8%E9%9D%A2%E9%97%AE%E9%A2%98/"/>
    <id>https://yaoyinglong.github.io/Blog/Interview/Spring常面问题/</id>
    <published>2020-06-18T16:00:00.000Z</published>
    <updated>2020-06-19T02:09:25.150Z</updated>
    
    <content type="html"><![CDATA[<p>1、Spring Boot、Spring MVC、Spring之间的区别？（Spring Boot本质是什么？）</p><p>2、Spring Boot Starter是什么？</p><p>3、如何自定义Spring Boot Starter？（如何扩展Spring Boot）</p><p>4、Spring Boot的自动装配原理是什么？（源码分析哦）</p><p>5、Spring Boot的启动流程是什么？</p><p>6、有没有看过Spring Boot源码？你觉得最神奇的地方是什么？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、Spring Boot、Spring MVC、Spring之间的区别？（Spring Boot本质是什么？）&lt;/p&gt;
&lt;p&gt;2、Spring Boot Starter是什么？&lt;/p&gt;
&lt;p&gt;3、如何自定义Spring Boot Starter？（如何扩展Spring B
      
    
    </summary>
    
      <category term="hide" scheme="https://yaoyinglong.github.io/categories/hide/"/>
    
    
  </entry>
  
  <entry>
    <title>数据库常面问题</title>
    <link href="https://yaoyinglong.github.io/Blog/Interview/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E9%9D%A2%E9%97%AE%E9%A2%98/"/>
    <id>https://yaoyinglong.github.io/Blog/Interview/数据库常面问题/</id>
    <published>2020-06-18T16:00:00.000Z</published>
    <updated>2020-06-19T02:11:17.303Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="hide" scheme="https://yaoyinglong.github.io/categories/hide/"/>
    
    
  </entry>
  
  <entry>
    <title>Excel文件数据抽取</title>
    <link href="https://yaoyinglong.github.io/Blog/Python/Excel%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E6%8A%BD%E5%8F%96/"/>
    <id>https://yaoyinglong.github.io/Blog/Python/Excel文件数据抽取/</id>
    <published>2020-06-18T16:00:00.000Z</published>
    <updated>2020-06-19T02:45:28.207Z</updated>
    
    <content type="html"><![CDATA[<p>本文仅仅是对Excel中的数据进行了简单的读取抽出并统一输出到指定的地方，在读取老版本xls文件的时候可能会出现编码的问题导致文件读取失败：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UnicodeDecodeError: <span class="string">'utf-16-le'</span> codec can<span class="string">'t decode byte 0x40 in position 104: truncated data</span></span><br></pre></td></tr></table></figure></p><p>可以通过对报错的源码<code>unpack_unicode</code>代码进行<code>try-except</code>并将其赋值为空。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>: </span><br><span class="line">    strg = unpack_unicode(data, <span class="number">0</span>, lenlen=<span class="number">2</span>) </span><br><span class="line"><span class="keyword">except</span>: </span><br><span class="line">    strg = <span class="string">""</span></span><br></pre></td></tr></table></figure><p>以下代码仅仅是遍历指定目录下的所有文件，之所以多写一重判断循环文件，是为了将第一层的文件夹名称生成一个新的<code>sheet</code>，第一级文件夹下的所有文件的数据都统计到当前文件夹名称所对应的<code>sheet</code>中，且对实际情况进行了简单的数据过滤和处理，在此仅仅是存储一个简单的模板，后续有其他的需求可在该模板上持续修改优化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_value</span><span class="params">(basePath)</span>:</span></span><br><span class="line">    fileDirs = os.listdir(basePath)</span><br><span class="line">    dataAllValue = pd.DataFrame()</span><br><span class="line">    <span class="keyword">for</span> fileDir <span class="keyword">in</span> fileDirs:</span><br><span class="line">        childFile = os.path.join(<span class="string">'%s%s%s'</span> % (basePath, <span class="string">"\\"</span>, fileDir))</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(childFile):</span><br><span class="line">            <span class="keyword">if</span> fileDir.endswith(<span class="string">"xls"</span>) <span class="keyword">or</span> fileDir.endswith(<span class="string">"xlsx"</span>) <span class="keyword">or</span> fileDir.endswith(<span class="string">"XLS"</span>) <span class="keyword">or</span> fileDir.endswith(<span class="string">"XLSX"</span>):</span><br><span class="line">                colunm_count, sheetDataFrameValue = read_excel(childFile)</span><br><span class="line">                <span class="keyword">if</span> sheetDataFrameValue.empty:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">if</span> colunm_count == <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                dataAllValue = dataAllValue.append(sheetDataFrameValue)</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(childFile):</span><br><span class="line">            childDataFrameValue = find_value(childFile)</span><br><span class="line">            dataAllValue = dataAllValue.append(childDataFrameValue)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dataAllValue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_excel</span><span class="params">(childFile)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        FileObj = xlrd.open_workbook(childFile)  <span class="comment"># 打开处理的excel文件</span></span><br><span class="line">        sheetNames = FileObj.sheet_names()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"有问题的文件："</span>, childFile)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, pd.DataFrame()</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> sheetName <span class="keyword">in</span> sheetNames:</span><br><span class="line">        sheet = FileObj.sheets()[i]  <span class="comment"># 获取第一个工作表</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        row_count = sheet.nrows  <span class="comment"># 行数</span></span><br><span class="line">        colunm_count = <span class="number">0</span></span><br><span class="line">        sheetDataFrameValue = pd.DataFrame()</span><br><span class="line">        <span class="keyword">for</span> element <span class="keyword">in</span> range(<span class="number">2</span>, row_count):</span><br><span class="line">            row_values = [cell_value_clear(cell_value) <span class="keyword">for</span> cell_value <span class="keyword">in</span> sheet.row_values(element)]</span><br><span class="line">            <span class="keyword">for</span> keyValue <span class="keyword">in</span> keyValues:</span><br><span class="line">                <span class="keyword">if</span> keyValue.lower() <span class="keyword">in</span> row_values:</span><br><span class="line">                    findCon = sheet.row_values(element)</span><br><span class="line">                    not_empty = [i <span class="keyword">for</span> i <span class="keyword">in</span> findCon <span class="keyword">if</span> i != <span class="string">''</span>]</span><br><span class="line">                    <span class="keyword">if</span> len(not_empty) &lt; <span class="number">3</span>:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                    columnDf = pd.DataFrame(findCon)</span><br><span class="line">                    columnDf.rename(columns=&#123;<span class="number">0</span>: colunm_count&#125;, inplace=<span class="literal">True</span>)</span><br><span class="line">                    <span class="keyword">if</span> sheetDataFrameValue.empty:</span><br><span class="line">                        sheetDataFrameValue = columnDf.join(sheetDataFrameValue)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        sheetDataFrameValue = sheetDataFrameValue.join(columnDf)</span><br><span class="line">                    colunm_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> colunm_count, sheetDataFrameValue</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cell_value_clear</span><span class="params">(cell_value)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> cell_value <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">    <span class="keyword">return</span> str(cell_value).replace(<span class="string">" "</span>, <span class="string">""</span>).lower()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_excel_xlsx</span><span class="params">(dataFrameValue1, sheetName, excelName)</span>:</span></span><br><span class="line">    newExcel = pd.DataFrame(dataFrameValue1)</span><br><span class="line">    writer = pd.ExcelWriter(excelName, engine=<span class="string">'openpyxl'</span>)</span><br><span class="line">    is_file_exists = os.path.exists(excelName)  <span class="comment"># 判断文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> is_file_exists <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">        book = openpyxl.load_workbook(writer.path)</span><br><span class="line">        writer.book = book</span><br><span class="line">        newExcel.to_excel(excel_writer=writer, sheet_name=sheetName, encoding=<span class="string">"utf-8"</span>, index=<span class="literal">False</span>)</span><br><span class="line">        writer.save()</span><br><span class="line">        writer.close()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        newExcel.to_excel(excel_writer=writer, sheet_name=sheetName, encoding=<span class="string">"utf-8"</span>, index=<span class="literal">False</span>)</span><br><span class="line">        writer.save()</span><br><span class="line">        writer.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(basePath)</span>:</span></span><br><span class="line">    pathDirs = os.listdir(basePath)</span><br><span class="line">    <span class="keyword">for</span> path <span class="keyword">in</span> pathDirs:</span><br><span class="line">        provinceDataPath = os.path.join(<span class="string">'%s%s%s'</span> % (basePath, <span class="string">"\\"</span>, path))</span><br><span class="line">        print(provinceDataPath)</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(provinceDataPath):</span><br><span class="line">            dataAllValue = find_value(provinceDataPath)</span><br><span class="line">            print(dataAllValue)</span><br><span class="line">            <span class="keyword">if</span> dataAllValue.empty:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            write_excel_xlsx(dataAllValue, path, excelName)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 文件路径</span></span><br><span class="line">    basePath = <span class="string">r"F:\data"</span></span><br><span class="line">    keyValues = [<span class="string">"指标1"</span>, <span class="string">"指标2"</span>, <span class="string">"指标3"</span>, <span class="string">"指标4"</span>]</span><br><span class="line">    excelName = <span class="string">'F:\抽取数据\数据统计总览.xlsx'</span>  <span class="comment"># 文件保存的路径</span></span><br><span class="line">    run(basePath)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文仅仅是对Excel中的数据进行了简单的读取抽出并统一输出到指定的地方，在读取老版本xls文件的时候可能会出现编码的问题导致文件读取失败：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="Python" scheme="https://yaoyinglong.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://yaoyinglong.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>和女孩子相处</title>
    <link href="https://yaoyinglong.github.io/Blog/%E8%87%AA%E5%BA%A6/%E5%92%8C%E5%A5%B3%E5%AD%A9%E5%AD%90%E7%9B%B8%E5%A4%84/"/>
    <id>https://yaoyinglong.github.io/Blog/自度/和女孩子相处/</id>
    <published>2020-05-25T16:00:00.000Z</published>
    <updated>2020-06-19T01:57:12.129Z</updated>
    
    <content type="html"><![CDATA[<p><strong>多问对方的意见或建议，尽量给选项，或者让她推荐</strong></p><p><strong>认真你就输了</strong></p><p>菜单，歌单，账单</p><h3 id="话题"><a href="#话题" class="headerlink" title="话题"></a>话题</h3><ul><li>分享音乐</li></ul><h3 id="禁忌"><a href="#禁忌" class="headerlink" title="禁忌"></a>禁忌</h3><ul><li>聊天时不要抱着解决问题的思维</li><li>约会中不能没有主见</li><li>没有话题不要强聊，适可而止</li></ul><h3 id="活动"><a href="#活动" class="headerlink" title="活动"></a>活动</h3><ul><li>猫咖</li><li>电玩城</li><li>射箭馆</li><li>逛宜家</li><li>湖边喂鱼</li><li>水族馆</li><li>看电影（私人影院）</li><li>VR</li><li>唱歌</li><li>逛公园（浣花溪公园）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;多问对方的意见或建议，尽量给选项，或者让她推荐&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;认真你就输了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;菜单，歌单，账单&lt;/p&gt;
&lt;h3 id=&quot;话题&quot;&gt;&lt;a href=&quot;#话题&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="hide" scheme="https://yaoyinglong.github.io/categories/hide/"/>
    
    
  </entry>
  
  <entry>
    <title>有关于你</title>
    <link href="https://yaoyinglong.github.io/Blog/%E8%87%AA%E5%BA%A6/%E6%9C%89%E5%85%B3%E4%BA%8E%E4%BD%A0/"/>
    <id>https://yaoyinglong.github.io/Blog/自度/有关于你/</id>
    <published>2020-05-25T16:00:00.000Z</published>
    <updated>2020-06-19T01:57:12.130Z</updated>
    
    <content type="html"><![CDATA[<p>​     时间过去了一个月了，刚开始我以为自己不会那么难受，但是我错了，5月13号当天和你说了那些装作满不在乎故作洒脱的狠话后，我都没有坚强到正常下班，其实我是一个优柔寡断人；然后接下来的两周真的很害怕一个人独处，因为总是不断的回想起有关于你的一切，虽然我们总共算起来也只是见过四次面，从4月11号第一次见面到5月10号最后一次见面，时间也只有短短的一个月，但是我总是会不由自主的想起你出现在我视线里的所有画面，每天上班下班都会经过第一次你过来找我一起走过的那条路</p><p>​    现在回想起第一次见面时的场景，对于你这个陌生人，而且在汪鑫说要将你介绍给我认识的前提下，我有点不自然，可能是源于我从小认识和接触的女性极少的缘故，所以第一次见面我表现的对你不理不睬满不在乎，其实总是在偷偷注意，在吃火锅的时候感觉你都没咋吃，然后又去上了一趟厕所，包括你要过苏苏手中的烟，问是什么牌子，然后KTV唱歌的时候偷偷关注你唱歌时的模样，然后后面的时候你出去了好多次，有一次时间还比较长，我还以为你走了呢，然后后面的时候你问我脖子上戴的是什么，让我有点小高兴，但还是故作冷漠和平静，第一次对你的印象感觉你是一个很文静斯文的人，而且说话也比较直爽，是我比较喜欢的类型。</p><p>​    但我以为仅此而已，然后在他们的怂恿下我加了你的微信，看到你头像的时候我笑了，更加觉得你是一个真实直爽的人，当时虽然没有聊两句，但是聊起来很舒服，没多少刻意，但是即使那一刻我依然认为应该不怎么会有后续，因为我是一个不自信不主动的人，以为和之前朋友介绍的人一样，只是刚加微信的时候能唠几句，然后就没有然后了；</p><p>​    但我没想到的是你居然主动找我，我高兴坏了。接下来的聊天是我从未有过的体验，有时候半夜睡醒了一想到就一下子兴奋起来睡不着了，那段时间毫不夸张的说真的是睡着都笑醒，然后琪琪说我终于进入简单模式了，和你相处的时间，虽然很多时候只是隔着屏幕聊天，但是我总觉得你总是很为我着想，很体贴，对我真的很好，我是一个很容易被感动的人，有几次真的想到你有点不由的泪光闪烁，那时候我想我一定不能伤害到你，但是最终我还是没有做到。</p><p>​    没有谈过恋爱的我过于直男，以前真的不觉得自己很直，一直觉得自己是一个很敏感很细心的人，以为很多事情都知道该怎么做，但其实我错了，我连最根本的和女孩子相处应该多征求女孩子的意见和建议都没有搞明白，一味的按照自己的想法，这也直接造成了第一次的不愉快，当时是真的很想多跟你相处在一起，哪仅仅是一起静静的散散步什么的，这一次过后其实我也好好的反省了自己，告诫自己同样的问题一定不能出现。</p><p>​    但是好像又出现了新的问题，第一次你过来找过我后的那个周末，之前本来说的去找你的，但是我没有明白你本意，你用你来找我换我用不找你，这其实算是第一次和第二次不愉快的导火索，所以我总想着要去找你一次，才能对得起你大老远舟车劳顿过来找我，可能我有点大男子主义吧，我觉得我应该是主动去找你的那个人，然后第二次你又是用你来找我换我不用去找你，但是我还是没有明白你用意，所以又头铁了一把惹得你不开心</p><p>​    然后五一</p><p>​    可能我都没有学会该如何好好的去爱一个人</p><p>​    你是我那段时间唯一的快乐源泉。</p><p>工作的时候总会在某个时刻停下来然后想起你</p><p>其实也不是没有主见，只是觉得对于你什么都可以，我什么都可以妥协，即使当时不能立马妥协，但也会慢慢妥协</p><p>我以为随着时间的推移我会忘记对你的感觉，但是这段时间我总是在闲下来的时候，不由自主的想起你，在夜深人静的时候想起你，在早晨一醒来还没睁开眼睛是第一个念头想到的也是你，所以总是忍不住去一遍又一遍的打开网易云音乐看看你最近听什么歌，一遍又一遍点开你朋友圈看看你有没有更新动态，一遍又一遍的看你的微博，去骚扰你是我真的实在是扛不住对你的思念了，但是又不知道该说些什么好</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​     时间过去了一个月了，刚开始我以为自己不会那么难受，但是我错了，5月13号当天和你说了那些装作满不在乎故作洒脱的狠话后，我都没有坚强到正常下班，其实我是一个优柔寡断人；然后接下来的两周真的很害怕一个人独处，因为总是不断的回想起有关于你的一切，虽然我们总共算起来也只
      
    
    </summary>
    
      <category term="hide" scheme="https://yaoyinglong.github.io/categories/hide/"/>
    
    
  </entry>
  
  <entry>
    <title>自度</title>
    <link href="https://yaoyinglong.github.io/Blog/%E8%87%AA%E5%BA%A6/%E8%87%AA%E5%BA%A6/"/>
    <id>https://yaoyinglong.github.io/Blog/自度/自度/</id>
    <published>2020-05-25T16:00:00.000Z</published>
    <updated>2020-06-19T01:57:12.130Z</updated>
    
    <content type="html"><![CDATA[<p>人生不如意事常八九，不爱了或者爱而不得才是人生常态</p><p>人在道理面前，总以为自己明白了，但是只有被真正教训过才会知道明白，就像之前我被天气教育那样，把伞放家里下班的时候下雨，把伞放公司上班的时候下雨，最终我买了两把伞。<br>以前我总以为真诚相待才是相处的根本，被教训过才发现，并不是这样，人与人是不同的，你认知里的真诚在别人眼里或许是污言秽语恶意中伤。</p><p>总是在第一经历某种痛苦或者说苦难的时候，是最煎熬的，也才会学会不要轻易的寄托</p><p>人总是在逆境中快速成长，才会对人生有所感悟</p><p>我是一个平凡孤独平凡且无趣的人，没有伟大的梦想，尽量热爱生活</p><p>渐渐的就发现没有什么特别热爱的东西了</p><p>其实我觉得人生最好的状态就是无欲无求，对任何事都不抱什么什么特别的期待</p><p>其实有一群经常一起玩的好朋友是真的很幸福。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;人生不如意事常八九，不爱了或者爱而不得才是人生常态&lt;/p&gt;
&lt;p&gt;人在道理面前，总以为自己明白了，但是只有被真正教训过才会知道明白，就像之前我被天气教育那样，把伞放家里下班的时候下雨，把伞放公司上班的时候下雨，最终我买了两把伞。&lt;br&gt;以前我总以为真诚相待才是相处的根本，被
      
    
    </summary>
    
      <category term="hide" scheme="https://yaoyinglong.github.io/categories/hide/"/>
    
    
  </entry>
  
  <entry>
    <title>斐波那契</title>
    <link href="https://yaoyinglong.github.io/Blog/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91/"/>
    <id>https://yaoyinglong.github.io/Blog/算法/排序/斐波那契/</id>
    <published>2020-05-24T16:00:00.000Z</published>
    <updated>2020-06-19T01:57:12.128Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>比较两个相邻的元素，将值大或者小的的元素交换到一边。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>每进行一趟排序，下一趟排序就会少比较一次。</p><h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>若数据是顺序的，只需一趟即可完成排序，所需比较次数<code>C</code>和记录移动次数均<code>M</code>达到最小值，即<code>C = n -1；M = 0</code> ，所以冒泡排序的最好的时间复杂度为<code>O(n)</code></p><p>若数据是反序，则需要进行<code>n - 1</code>躺排序，且每趟排序需要<code>n - i</code>此比较（<code>0 &lt;  i &lt; n</code>）,且每次比较必须移动记录三次来达到交换记录位置，这时比较和移动次数均达到最大值，该种情况下冒泡排序得时间复杂度为<code>O(n^2)</code></p><p>综上所述冒泡排序得平均<strong>时间复杂度</strong>：<code>O(n^2)</code></p><p><strong>空间复杂度</strong>：<code>O(1)</code></p><p><strong>稳定性</strong>：<strong>稳定</strong></p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">bubblerSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; arr.length &amp;&amp; flag; i++)&#123;</span><br><span class="line">        flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = arr.length - i; j &gt; i ; j--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j - <span class="number">1</span>] &gt; arr[j])&#123;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line">                arr[j - <span class="number">1</span>] = temp;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;比较两个相邻的元素，将值大或者小的的元素交换到一边。&lt;/p&gt;
&lt;h3 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;header
      
    
    </summary>
    
      <category term="hide" scheme="https://yaoyinglong.github.io/categories/hide/"/>
    
    
      <category term="算法，排序" scheme="https://yaoyinglong.github.io/tags/%E7%AE%97%E6%B3%95%EF%BC%8C%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>冒泡排序</title>
    <link href="https://yaoyinglong.github.io/Blog/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    <id>https://yaoyinglong.github.io/Blog/算法/排序/冒泡排序/</id>
    <published>2020-05-24T16:00:00.000Z</published>
    <updated>2020-06-19T01:57:12.128Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>比较两个相邻的元素，将值大或者小的的元素交换到一边。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>每进行一趟排序，下一趟排序就会少比较一次。</p><h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>若数据是顺序的，只需一趟即可完成排序，所需比较次数<code>C</code>和记录移动次数均<code>M</code>达到最小值，即<code>C = n -1；M = 0</code> ，所以冒泡排序的最好的时间复杂度为<code>O(n)</code></p><p>若数据是反序，则需要进行<code>n - 1</code>躺排序，且每趟排序需要<code>n - i</code>此比较（<code>0 &lt;  i &lt; n</code>）,且每次比较必须移动记录三次来达到交换记录位置，这时比较和移动次数均达到最大值，该种情况下冒泡排序得时间复杂度为<code>O(n^2)</code></p><p>综上所述冒泡排序得平均<strong>时间复杂度</strong>：<code>O(n^2)</code></p><p><strong>空间复杂度</strong>：<code>O(1)</code></p><p><strong>稳定性</strong>：<strong>稳定</strong></p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">bubblerSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; arr.length &amp;&amp; flag; i++)&#123;</span><br><span class="line">        flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = arr.length - i; j &gt; i ; j--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j - <span class="number">1</span>] &gt; arr[j])&#123;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line">                arr[j - <span class="number">1</span>] = temp;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;比较两个相邻的元素，将值大或者小的的元素交换到一边。&lt;/p&gt;
&lt;h3 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;header
      
    
    </summary>
    
      <category term="算法" scheme="https://yaoyinglong.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="https://yaoyinglong.github.io/categories/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/"/>
    
    
      <category term="算法，排序" scheme="https://yaoyinglong.github.io/tags/%E7%AE%97%E6%B3%95%EF%BC%8C%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Java中调用Groovy脚本</title>
    <link href="https://yaoyinglong.github.io/Blog/Java/%E5%B7%A5%E5%85%B7/Java%E4%B8%AD%E8%B0%83%E7%94%A8Groovy%E8%84%9A%E6%9C%AC/"/>
    <id>https://yaoyinglong.github.io/Blog/Java/工具/Java中调用Groovy脚本/</id>
    <published>2019-12-24T16:00:00.000Z</published>
    <updated>2019-12-26T07:48:30.432Z</updated>
    
    <content type="html"><![CDATA[<p><code>Groovy</code>是构建在<code>JVM</code>上的一个轻量级动态语言，其是<code>Java</code>实现的，与<code>Java</code>语法类是，能很好的与<code>Java</code>代码结合，及扩展现有代码。</p><p><code>Java</code>在语音动态性方面只能通过反射，且参数传递格式很严格不是很灵活，而<code>Groovy</code>是构建在<code>JVM</code>上的一个轻量级动态语言，其是<code>Java</code>实现的，与<code>Java</code>语法类是，能很好的与<code>Java</code>代码结合，及动态扩展现有代码。</p><p><code>Java</code>中可以通过<strong><code>GroovyScriptEngine</code></strong>、<strong><code>GroovyClassLoader</code></strong>、<strong><code>GroovyShell</code></strong>、<strong><code>ScriptEngineManager</code></strong>等方式调用<code>Groovy</code>，以及在实际项目中的运用。<code>Maven</code>依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;groovy.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="GroovyScriptEngine"><a href="#GroovyScriptEngine" class="headerlink" title="GroovyScriptEngine"></a>GroovyScriptEngine</h3><p>从指定的位置（文件系统，URL，数据库等）加载<code>Groovy</code>脚本，并且随着脚本变化而重新加载。在相互关联的多个脚本情况下使用<code>GroovyScriptEngine</code>更好些。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GroovyScriptEngine engine = <span class="keyword">new</span> GroovyScriptEngine(<span class="string">"src/test/resources/groovy/"</span>);</span><br><span class="line"></span><br><span class="line">Map&lt;String, Object&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">param.put(<span class="string">"id"</span>, <span class="string">"KKKKKKKKKKKKKK"</span>);</span><br><span class="line">param.put(<span class="string">"aa"</span>, <span class="number">45</span>);</span><br><span class="line">Binding binding = <span class="keyword">new</span> Binding(param);</span><br><span class="line">Object result = engine.run(<span class="string">"Mixed.groovy"</span>, binding);</span><br></pre></td></tr></table></figure><h3 id="GroovyClassLoader"><a href="#GroovyClassLoader" class="headerlink" title="GroovyClassLoader"></a>GroovyClassLoader</h3><p><code>GroovyClassLoader</code>是一个定制的类装载器，负责解释加载<code>Java</code>类中用到的<code>Groovy</code>类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GroovyClassLoader loader = <span class="keyword">new</span> GroovyClassLoader();</span><br><span class="line">Class aClass = loader.parseClass(<span class="keyword">new</span> File(<span class="string">"src/test/resources/groovy/Mixed.groovy"</span>));</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    GroovyObject instance = (GroovyObject) aClass.newInstance();</span><br><span class="line">    Object result = instance.invokeMethod(<span class="string">"Mixed"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"KKKKKKKKKKKKKK"</span>, <span class="number">45</span>&#125;);</span><br><span class="line">     System.out.println(result);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">     e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="GroovyShell"><a href="#GroovyShell" class="headerlink" title="GroovyShell"></a>GroovyShell</h3><p><code>GroovyShell</code>允许在<code>Java</code>类甚至<code>Groovy</code>类中求任意Groovy表达式的值。可用<code>Binding</code>对象输入参数给表达式，并最终通过<code>GroovyShell</code>返回<code>Groovy</code>表达式的计算结果。多用于推求独立的脚本或表达式。</p><p>即使使用<code>GroovyShell</code>也有多种实现方式，使用<code>invokeMethod</code>方法调用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GroovyShell loader = <span class="keyword">new</span> GroovyShell();</span><br><span class="line">Script script = loader.parse(<span class="keyword">new</span> File(<span class="string">"src/test/resources/groovy/Mixed.groovy"</span>));</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    Object result = script.invokeMethod(<span class="string">"Mixed"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"KKKKKKKKKKKKKK"</span>, <span class="number">45</span>&#125;);</span><br><span class="line">    System.out.println(result);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过<code>GroovyShell</code>得<code>evaluate</code>方式直接调用脚本：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Object&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">param.put(<span class="string">"id"</span>, <span class="string">"KKKKKKKKKKKKKK"</span>);</span><br><span class="line">param.put(<span class="string">"aa"</span>, <span class="number">45</span>);</span><br><span class="line">param.put(<span class="string">"bb"</span>, <span class="number">55L</span>);</span><br><span class="line">param.put(<span class="string">"cc"</span>, <span class="number">9.9999</span>);</span><br><span class="line">Binding binding = <span class="keyword">new</span> Binding(param);</span><br><span class="line">GroovyShell loader = <span class="keyword">new</span> GroovyShell(binding);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    Object result = loader.evaluate(<span class="string">"return id + (aa + bb + cc)"</span>);</span><br><span class="line">    System.out.println(result);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过<code>InvokerHelper</code>类来调用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Object&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">param.put(<span class="string">"id"</span>, <span class="string">"KKKKKKKKKKKKKK"</span>);</span><br><span class="line">param.put(<span class="string">"aa"</span>, <span class="number">45</span>);</span><br><span class="line">param.put(<span class="string">"bb"</span>, <span class="number">55L</span>);</span><br><span class="line">param.put(<span class="string">"cc"</span>, <span class="number">9.9999</span>);</span><br><span class="line">Binding binding = <span class="keyword">new</span> Binding(param);</span><br><span class="line"></span><br><span class="line">GroovyShell shell = <span class="keyword">new</span> GroovyShell();</span><br><span class="line">Script script = shell.parse(<span class="keyword">new</span> File(<span class="string">"src/test/resources/groovy/Mixed.groovy"</span>));</span><br><span class="line"></span><br><span class="line">Object result = InvokerHelper.createScript(script.getClass(), binding).run();</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><p>还可以通过<code>GroovyShell</code>来直接<code>parse</code>脚本内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Object&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">param.put(<span class="string">"id"</span>, <span class="string">"KKKKKKKKKKKKKK"</span>);</span><br><span class="line">param.put(<span class="string">"aa"</span>, <span class="number">45</span>);</span><br><span class="line">param.put(<span class="string">"bb"</span>, <span class="number">55L</span>);</span><br><span class="line">param.put(<span class="string">"cc"</span>, <span class="number">9.9999</span>);</span><br><span class="line">Binding binding = <span class="keyword">new</span> Binding(param);</span><br><span class="line"></span><br><span class="line">GroovyShell shell = <span class="keyword">new</span> GroovyShell();</span><br><span class="line">Script script = shell.parse(<span class="string">"def Mixed(String id, int aa, Long bb, double cc) &#123;\n"</span> +</span><br><span class="line">                    <span class="string">"    return id + (aa + bb + cc)\n"</span> +</span><br><span class="line">                    <span class="string">"&#125;\n"</span> +</span><br><span class="line">                    <span class="string">"Mixed(id, aa, bb, cc)"</span>);</span><br><span class="line"></span><br><span class="line">Object result = InvokerHelper.createScript(script.getClass(), binding).run();</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><h3 id="ScriptEngineManager"><a href="#ScriptEngineManager" class="headerlink" title="ScriptEngineManager"></a>ScriptEngineManager</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ScriptEngineManager manager = <span class="keyword">new</span> ScriptEngineManager();</span><br><span class="line">ScriptEngine engine = manager.getEngineByName(<span class="string">"groovy"</span>);</span><br><span class="line"></span><br><span class="line">Bindings binding = engine.createBindings();</span><br><span class="line">binding.put(<span class="string">"id"</span>, <span class="string">"KKKKKKKKKKKKKK"</span>);</span><br><span class="line">binding.put(<span class="string">"aa"</span>, <span class="number">45</span>);</span><br><span class="line">binding.put(<span class="string">"bb"</span>, <span class="number">55L</span>);</span><br><span class="line">binding.put(<span class="string">"cc"</span>, <span class="number">9.9999</span>);</span><br><span class="line"></span><br><span class="line">Object result = engine.eval(<span class="string">"return id + (aa + bb + cc)"</span>, binding);</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><h3 id="集成常见问题"><a href="#集成常见问题" class="headerlink" title="集成常见问题"></a>集成常见问题</h3><h5 id="使用GroovyShell的parse方法导致perm区爆满的问题"><a href="#使用GroovyShell的parse方法导致perm区爆满的问题" class="headerlink" title="使用GroovyShell的parse方法导致perm区爆满的问题"></a>使用GroovyShell的parse方法导致perm区爆满的问题</h5><p>若应用中内嵌Groovy引擎，会动态执行传入的表达式并返回执行结果，而<code>Groovy</code>每执行一次脚本，都会生成一个脚本对应的<code>class</code>对象，并<code>new</code>一个<code>InnerLoader</code>去加载这个对象，而<code>InnerLoader</code>和脚本对象都无法在gc的时候被回收运行一段时间后将<code>perm</code>占满，一直触发<code>fullgc</code>。</p><p>对于同一个<code>Groovy</code>脚本，<code>Groovy</code>执行引擎都会不同的命名，且命名与时间戳有关。当传入text时，<code>class</code>对象的命名规则为：<code>&quot;script&quot; + System.currentTimeMillis() + Math.abs(text.hashCode()) + &quot;.groovy&quot;</code>。这就导致就算<code>Groovy</code>脚本未发生任何变化，每次执行<code>parse</code>方法都会新生成一个脚本对应的<code>class</code>对象，且由<code>GroovyClassLoader</code>进行加载，不断增大<code>perm</code>区。</p><p><code>JVM</code>中的<code>Class</code>只有满足以下三个条件，才能被<code>GC</code>回收，也就是该<code>Class</code>被卸载：</p><ul><li><p>该类所有的实例都已经被<code>GC</code>，也就是<code>JVM</code>中不存在该<code>Class</code>的任何实例；</p></li><li><p>加载该类的<code>ClassLoader</code>已经被<code>GC</code>；</p></li><li>该类的<code>java.lang.Class</code>对象没有在任何地方被引用，如不能在任何地方通过反射访问该类的方法。</li></ul><p>在<code>GroovyClassLoader</code>代码中有一个<code>class</code>对象的缓存，每次编译脚本时都会在<code>Map</code>中缓存这个对象，即：<code>setClassCacheEntry(clazz)</code>。每次<code>groovy</code>编译脚本后，都会缓存该脚本的<code>Class</code>对象，下次编译该脚本时，会优先从缓存中读取，这样节省掉编译的时间。这个缓存的<code>Map</code>由<code>GroovyClassLoader</code>持有，<code>key</code>是脚本的类名，这就导致每个脚本对应的<code>class</code>对象都存在引用，无法被<code>GC</code>清理掉。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;Groovy&lt;/code&gt;是构建在&lt;code&gt;JVM&lt;/code&gt;上的一个轻量级动态语言，其是&lt;code&gt;Java&lt;/code&gt;实现的，与&lt;code&gt;Java&lt;/code&gt;语法类是，能很好的与&lt;code&gt;Java&lt;/code&gt;代码结合，及扩展现有代码。&lt;/p&gt;

      
    
    </summary>
    
      <category term="Java" scheme="https://yaoyinglong.github.io/categories/Java/"/>
    
      <category term="工具" scheme="https://yaoyinglong.github.io/categories/Java/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Groovy" scheme="https://yaoyinglong.github.io/tags/Groovy/"/>
    
  </entry>
  
  <entry>
    <title>国债逆回购</title>
    <link href="https://yaoyinglong.github.io/Blog/%E7%90%86%E8%B4%A2/%E5%9B%BD%E5%80%BA%E9%80%86%E5%9B%9E%E8%B4%AD/"/>
    <id>https://yaoyinglong.github.io/Blog/理财/国债逆回购/</id>
    <published>2019-12-09T16:00:00.000Z</published>
    <updated>2019-12-10T03:23:41.248Z</updated>
    
    <content type="html"><![CDATA[<h3 id="购买技巧"><a href="#购买技巧" class="headerlink" title="购买技巧"></a>购买技巧</h3><ul><li>每到年中，年底，长的节假日前，国债逆回购利息都会比较高</li><li>国债逆回购收益最高一般出现在节假日前的第二天，一般是周四，此时逆回购收益是最高的</li><li>每年1月初的市场资金面通常会比较宽松</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;购买技巧&quot;&gt;&lt;a href=&quot;#购买技巧&quot; class=&quot;headerlink&quot; title=&quot;购买技巧&quot;&gt;&lt;/a&gt;购买技巧&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;每到年中，年底，长的节假日前，国债逆回购利息都会比较高&lt;/li&gt;
&lt;li&gt;国债逆回购收益最高一般出现在节假日前的
      
    
    </summary>
    
      <category term="hide" scheme="https://yaoyinglong.github.io/categories/hide/"/>
    
    
  </entry>
  
  <entry>
    <title>基金基本知识总结</title>
    <link href="https://yaoyinglong.github.io/Blog/%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>https://yaoyinglong.github.io/Blog/理财/基金基本知识总结/</id>
    <published>2019-12-05T16:00:00.000Z</published>
    <updated>2019-12-10T02:59:30.117Z</updated>
    
    <content type="html"><![CDATA[<h3 id="指数基金"><a href="#指数基金" class="headerlink" title="指数基金"></a>指数基金</h3><ul><li><strong>上证 50：</strong>主要投资<strong>大型企业</strong>， 50 是代表它所投资企业的数量</li><li><strong>沪深 300：</strong>主要投资<strong>中大型企业</strong>，是国内影响力最大、最重要的指数基金，沪深300是从上海和深圳两个交易所中挑选<strong>最大的300家大型企业</strong></li><li><strong>中证 500</strong>：主要投资<strong>中小型企业</strong></li><li><strong>创业版</strong>：主要投资<strong>小型企业</strong>，专门投资小型企业门槛更低的上市市场，一些当前规模不够大，盈利不够好，达不到主板上市的要求创业板</li><li><strong>红利指数</strong>：主要投资高分红企业，现金分红：股票的股息，指业绩比较好的公司， 会每年从公司的净利润当中抽出一部分，以现金分红的方式回馈给股东通过持有几十只现金分红比较高的股票，来获取更高的收益.</li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;指数基金&quot;&gt;&lt;a href=&quot;#指数基金&quot; class=&quot;headerlink&quot; title=&quot;指数基金&quot;&gt;&lt;/a&gt;指数基金&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;上证 50：&lt;/strong&gt;主要投资&lt;strong&gt;大型企业&lt;/strong&gt;， 50 是代表
      
    
    </summary>
    
      <category term="hide" scheme="https://yaoyinglong.github.io/categories/hide/"/>
    
    
  </entry>
  
  <entry>
    <title>Maven加密JAR包</title>
    <link href="https://yaoyinglong.github.io/Blog/Maven/Maven%E5%8A%A0%E5%AF%86JAR%E5%8C%85/"/>
    <id>https://yaoyinglong.github.io/Blog/Maven/Maven加密JAR包/</id>
    <published>2019-10-27T16:00:00.000Z</published>
    <updated>2019-10-28T08:21:00.530Z</updated>
    
    <content type="html"><![CDATA[<p>在某些情况下可能会需要将<code>JAR</code>包提供给第三方使用，但又不想泄露源码，可以对架包进行加密处理。可以使用<code>xjar-maven-plugin</code>插件对生成得<code>JAR</code>进行加密，<code>Maven</code>配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.core-lib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xjar-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>v2.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>build<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">password</span>&gt;</span>7nBHK8bKB6<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>com/icloud/**<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">sourceDir</span>&gt;</span>$&#123;outputDirectory&#125;<span class="tag">&lt;/<span class="name">sourceDir</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">sourceJar</span>&gt;</span>$&#123;finalName&#125;.jar<span class="tag">&lt;/<span class="name">sourceJar</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">targetDir</span>&gt;</span>$&#123;assembly.outputDirectory&#125;<span class="tag">&lt;/<span class="name">targetDir</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">targetJar</span>&gt;</span>$&#123;finalName&#125;-encrypted.jar<span class="tag">&lt;/<span class="name">targetJar</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在执行JAR包时，需要在启动命令中加入<code>--xjar.password=7nBHK8bKB6</code>命令进行解密，否则JAR包将不能正常启动。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在某些情况下可能会需要将&lt;code&gt;JAR&lt;/code&gt;包提供给第三方使用，但又不想泄露源码，可以对架包进行加密处理。可以使用&lt;code&gt;xjar-maven-plugin&lt;/code&gt;插件对生成得&lt;code&gt;JAR&lt;/code&gt;进行加密，&lt;code&gt;Maven&lt;/code
      
    
    </summary>
    
      <category term="Maven" scheme="https://yaoyinglong.github.io/categories/Maven/"/>
    
    
      <category term="Maven" scheme="https://yaoyinglong.github.io/tags/Maven/"/>
    
      <category term="加密" scheme="https://yaoyinglong.github.io/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Maven个性化打包</title>
    <link href="https://yaoyinglong.github.io/Blog/Maven/Maven%E4%B8%AA%E6%80%A7%E5%8C%96%E6%89%93%E5%8C%85/"/>
    <id>https://yaoyinglong.github.io/Blog/Maven/Maven个性化打包/</id>
    <published>2019-10-27T16:00:00.000Z</published>
    <updated>2020-06-19T01:57:28.310Z</updated>
    
    <content type="html"><![CDATA[<p>在某些场景下，比如有N个产品，经常需要从这N个产品中抽取M个产品打包运行。而且每个产品都会持续迭代。若是将每个产品都写成一个项目会出现大量得重复代码，而且打包时需要打成多个包，会对客户造成困扰。为了解决这种场景可以使用<code>maven-assembly-plugin</code>插件<strong>自定义打包结构及定制依赖项</strong>将需要得<code>class</code>打进包中即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">classpathPrefix</span>&gt;</span>lib/<span class="tag">&lt;/<span class="name">classpathPrefix</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.icloud.CusMainApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-jar<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span><span class="comment">&lt;!-- 只运行一次 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">skipAssembly</span>&gt;</span>false<span class="tag">&lt;/<span class="name">skipAssembly</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">appendAssemblyId</span>&gt;</span>false<span class="tag">&lt;/<span class="name">appendAssemblyId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;assembly.finalName&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">descriptors</span>&gt;</span> <span class="comment">&lt;!--描述文件路径--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptor</span>&gt;</span>$&#123;project.basedir&#125;/common_jar.xml<span class="tag">&lt;/<span class="name">descriptor</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">descriptors</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-tar<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>install<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span><span class="comment">&lt;!-- 只运行一次 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">skipAssembly</span>&gt;</span>false<span class="tag">&lt;/<span class="name">skipAssembly</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">appendAssemblyId</span>&gt;</span>false<span class="tag">&lt;/<span class="name">appendAssemblyId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;assembly.finalName&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">descriptors</span>&gt;</span> <span class="comment">&lt;!--描述文件路径--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptor</span>&gt;</span>$&#123;project.basedir&#125;/common_tar.xml<span class="tag">&lt;/<span class="name">descriptor</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">descriptors</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>make-jar</code>是通过描述文件将项目打成JAR包，<code>make-tar</code>是为了将JAR包、配置文件、sh脚本等打成tar包。</p><p><code>common_jar.xml</code>脚本示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">assembly</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/ASSEMBLY/1.1.2"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/ASSEMBLY/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>TestAssembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">formats</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">format</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">format</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">formats</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 改为false不会出现两层相同的目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">includeBaseDirectory</span>&gt;</span>false<span class="tag">&lt;/<span class="name">includeBaseDirectory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fileSets</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Main --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;\..\target\classes<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>com\icloud\CusMainApplication.class<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>/<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- resources --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;\..\target\classes<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>rs\test_rs.csv<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>/<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fileSets</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencySets</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencySet</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">useProjectArtifact</span>&gt;</span>true<span class="tag">&lt;/<span class="name">useProjectArtifact</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">unpack</span>&gt;</span>true<span class="tag">&lt;/<span class="name">unpack</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencySet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencySets</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>common_tar.xml</code>脚本示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">assembly</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>bundle<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">formats</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">format</span>&gt;</span>tar.gz<span class="tag">&lt;/<span class="name">format</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">formats</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">includeBaseDirectory</span>&gt;</span>false<span class="tag">&lt;/<span class="name">includeBaseDirectory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fileSets</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/resources/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>application.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>application-prod.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>log4j2-prod.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>/config<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- scripts --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/resources/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>run.sh<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileMode</span>&gt;</span>0755<span class="tag">&lt;/<span class="name">fileMode</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>/<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- executable jar --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.build.directory&#125;/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>/<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>$&#123;assembly.finalName&#125;.jar<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileMode</span>&gt;</span>0755<span class="tag">&lt;/<span class="name">fileMode</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fileSets</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></span><br></pre></td></tr></table></figure><p>若在<code>SpringBoot</code>项目中遇到使用<code>Log4j2</code>的情况，以上配置能完成打包，但是在运行的时候会出现由于日志配置文件解析不了导致项目启动失败。这时需要用到另一个插件<code>maven-shade-plugin</code>对架包种得<code>Log4j2</code>进行处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">ERROR StatusLogger Unrecognized format specifier [d]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [d] starting at position <span class="number">16</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [thread]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [thread] starting at position <span class="number">25</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [level]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [level] starting at position <span class="number">35</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [logger]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [logger] starting at position <span class="number">47</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [msg]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [msg] starting at position <span class="number">54</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [n]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [n] starting at position <span class="number">56</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [d]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [d] starting at position <span class="number">16</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [thread]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [thread] starting at position <span class="number">25</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [level]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [level] starting at position <span class="number">35</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [logger]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [logger] starting at position <span class="number">47</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [msg]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [msg] starting at position <span class="number">54</span> in conversion pattern.</span><br><span class="line">ERROR StatusLogger Unrecognized format specifier [n]</span><br><span class="line">ERROR StatusLogger Unrecognized conversion specifier [n] starting at position <span class="number">56</span> in conversion pattern.</span><br><span class="line"></span><br><span class="line">  .   ____          _            __ _ _</span><br><span class="line"> /\\ / ___<span class="string">'_ __ _ _(_)_ __  __ _ \ \ \ \</span></span><br><span class="line"><span class="string">( ( )\___ | '</span>_ | <span class="string">'_| | '</span>_ \/ _` | \ \ \ \</span><br><span class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">  <span class="string">'  |____| .__|_| |_|_| |_\__, | / / / /</span></span><br><span class="line"><span class="string"> =========|_|==============|___/=/_/_/_/</span></span><br><span class="line"><span class="string"> :: Spring Boot ::</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">%d [%thread] %-5level %logger - %msg%n%d [%thread] %-5level %logger - %msg%n org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.icloud.CusMainApplication]; nested exception is java.lang.IllegalArgumentException: No auto configuration classes found in META-INF/spring.factories. If you are using a custom packaging, make sure that file is correct.</span></span><br></pre></td></tr></table></figure><p><code>maven-shade-plugin</code>插件配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">createDependencyReducedPom</span>&gt;</span>false<span class="tag">&lt;/<span class="name">createDependencyReducedPom</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">transformers</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">transformer</span>                            <span class="attr">implementation</span>=<span class="string">"org.apache.maven.plugins.shade.resource.AppendingTransformer"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">resource</span>&gt;</span>META-INF/spring.schemas<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">transformer</span>                            <span class="attr">implementation</span>=<span class="string">"org.apache.maven.plugins.shade.resource.AppendingTransformer"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">resource</span>&gt;</span>META-INF/spring.handlers<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">transformer</span>                            <span class="attr">implementation</span>=<span class="string">"org.springframework.boot.maven.PropertiesMergingResourceTransformer"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">resource</span>&gt;</span>META-INF/spring.factories<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">transformer</span> <span class="attr">implementation</span>=<span class="string">"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">transformer</span> <span class="attr">implementation</span>=<span class="string">"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.icloud.CusMainApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">transformer</span> <span class="attr">implementation</span>=<span class="string">"com.github.edwgiz.mavenShadePlugin.log4j2CacheTransformer.PluginsCacheFileTransformer"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">transformers</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filters</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifact</span>&gt;</span>*:*<span class="tag">&lt;/<span class="name">artifact</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>META-INF/*.SF<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>META-INF/*.DSA<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>META-INF/*.RSA<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">filters</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.edwgiz<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin.log4j2-cachefile-transformer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在某些场景下，比如有N个产品，经常需要从这N个产品中抽取M个产品打包运行。而且每个产品都会持续迭代。若是将每个产品都写成一个项目会出现大量得重复代码，而且打包时需要打成多个包，会对客户造成困扰。为了解决这种场景可以使用&lt;code&gt;maven-assembly-plugin&lt;
      
    
    </summary>
    
      <category term="Maven" scheme="https://yaoyinglong.github.io/categories/Maven/"/>
    
    
      <category term="Maven" scheme="https://yaoyinglong.github.io/tags/Maven/"/>
    
      <category term="assembly" scheme="https://yaoyinglong.github.io/tags/assembly/"/>
    
  </entry>
  
  <entry>
    <title>国密SM4</title>
    <link href="https://yaoyinglong.github.io/Blog/Java/%E5%B7%A5%E5%85%B7/%E5%9B%BD%E5%AF%86SM4/"/>
    <id>https://yaoyinglong.github.io/Blog/Java/工具/国密SM4/</id>
    <published>2019-10-27T16:00:00.000Z</published>
    <updated>2019-11-14T06:22:24.128Z</updated>
    
    <content type="html"><![CDATA[<p><code>SM4</code> 无线局域网标准的<strong>分组数据算法</strong>。<strong>对称加密</strong>，<strong>密钥长度和分组长度均为128位</strong>。</p><p>分组密码常用得五种模式，这里主要讲<code>SM4</code>的<code>ECB</code>模式：</p><ul><li><code>EBC</code>-电码本模式</li><li><code>CBC</code>-密码分组链接模式</li><li><code>CTR</code>-计算器模式</li><li><code>CFB</code>-密码反馈模式</li><li><code>OFB</code>-输出反馈模式</li></ul><p><code>Maven</code>配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.bouncycastle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>bcpkix-jdk15on<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="特别关注"><a href="#特别关注" class="headerlink" title="特别关注"></a>特别关注</h3><p><code>SM4</code>加解密最需要注意，也是最容易出错的地方是<strong>填充模式</strong>的处理。而且对<strong>数据的填充方式是高度自由</strong>的。这里介绍两种填充方式。当然也可以不填充，但一般都会要求使用填充。</p><p>进行加密得时候会进行填充，在进行解密时会去填充。若填充方式不匹配，解密得数据将会不正确。</p><p>填充方式可以为：数据得长度 + 数据 + 填充，还可以为：数据 + 填充位长度 + 填充，且<strong>填充可以在转<code>HEX</code>前也可以在转<code>HEX</code>之后</strong>，所以说填充是高度自由的。</p><h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><p><code>SM4Context</code>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SM4Context</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> mode;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">long</span>[] sk;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> isPadding;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SM4Context</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mode = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.isPadding = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.sk = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">32</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SM4</code>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SM4</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SM4_ENCRYPT = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SM4_DECRYPT = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] SBOX_TABLE = &#123;</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xd6</span>, (<span class="keyword">byte</span>) <span class="number">0x90</span>, (<span class="keyword">byte</span>) <span class="number">0xe9</span>, (<span class="keyword">byte</span>) <span class="number">0xfe</span>, (<span class="keyword">byte</span>) <span class="number">0xcc</span>, (<span class="keyword">byte</span>) <span class="number">0xe1</span>, <span class="number">0x3d</span>, (<span class="keyword">byte</span>) <span class="number">0xb7</span>, <span class="number">0x16</span>, (<span class="keyword">byte</span>) <span class="number">0xb6</span>,</span><br><span class="line">            <span class="number">0x14</span>, (<span class="keyword">byte</span>) <span class="number">0xc2</span>, <span class="number">0x28</span>, (<span class="keyword">byte</span>) <span class="number">0xfb</span>, <span class="number">0x2c</span>, <span class="number">0x05</span>, <span class="number">0x2b</span>, <span class="number">0x67</span>, (<span class="keyword">byte</span>) <span class="number">0x9a</span>, <span class="number">0x76</span>, <span class="number">0x2a</span>, (<span class="keyword">byte</span>) <span class="number">0xbe</span>, <span class="number">0x04</span>, (<span class="keyword">byte</span>) <span class="number">0xc3</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xaa</span>, <span class="number">0x44</span>, <span class="number">0x13</span>, <span class="number">0x26</span>, <span class="number">0x49</span>, (<span class="keyword">byte</span>) <span class="number">0x86</span>, <span class="number">0x06</span>, (<span class="keyword">byte</span>) <span class="number">0x99</span>, (<span class="keyword">byte</span>) <span class="number">0x9c</span>, <span class="number">0x42</span>, <span class="number">0x50</span>, (<span class="keyword">byte</span>) <span class="number">0xf4</span>, (<span class="keyword">byte</span>) <span class="number">0x91</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xef</span>, (<span class="keyword">byte</span>) <span class="number">0x98</span>, <span class="number">0x7a</span>, <span class="number">0x33</span>, <span class="number">0x54</span>, <span class="number">0x0b</span>, <span class="number">0x43</span>, (<span class="keyword">byte</span>) <span class="number">0xed</span>, (<span class="keyword">byte</span>) <span class="number">0xcf</span>, (<span class="keyword">byte</span>) <span class="number">0xac</span>, <span class="number">0x62</span>, (<span class="keyword">byte</span>) <span class="number">0xe4</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xb3</span>, <span class="number">0x1c</span>, (<span class="keyword">byte</span>) <span class="number">0xa9</span>, (<span class="keyword">byte</span>) <span class="number">0xc9</span>, <span class="number">0x08</span>, (<span class="keyword">byte</span>) <span class="number">0xe8</span>, (<span class="keyword">byte</span>) <span class="number">0x95</span>, (<span class="keyword">byte</span>) <span class="number">0x80</span>, (<span class="keyword">byte</span>) <span class="number">0xdf</span>, (<span class="keyword">byte</span>) <span class="number">0x94</span>, (<span class="keyword">byte</span>) <span class="number">0xfa</span>,</span><br><span class="line">            <span class="number">0x75</span>, (<span class="keyword">byte</span>) <span class="number">0x8f</span>, <span class="number">0x3f</span>, (<span class="keyword">byte</span>) <span class="number">0xa6</span>, <span class="number">0x47</span>, <span class="number">0x07</span>, (<span class="keyword">byte</span>) <span class="number">0xa7</span>, (<span class="keyword">byte</span>) <span class="number">0xfc</span>, (<span class="keyword">byte</span>) <span class="number">0xf3</span>, <span class="number">0x73</span>, <span class="number">0x17</span>, (<span class="keyword">byte</span>) <span class="number">0xba</span>, (<span class="keyword">byte</span>) <span class="number">0x83</span>,</span><br><span class="line">            <span class="number">0x59</span>, <span class="number">0x3c</span>, <span class="number">0x19</span>, (<span class="keyword">byte</span>) <span class="number">0xe6</span>, (<span class="keyword">byte</span>) <span class="number">0x85</span>, <span class="number">0x4f</span>, (<span class="keyword">byte</span>) <span class="number">0xa8</span>, <span class="number">0x68</span>, <span class="number">0x6b</span>, (<span class="keyword">byte</span>) <span class="number">0x81</span>, (<span class="keyword">byte</span>) <span class="number">0xb2</span>, <span class="number">0x71</span>, <span class="number">0x64</span>, (<span class="keyword">byte</span>) <span class="number">0xda</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0x8b</span>, (<span class="keyword">byte</span>) <span class="number">0xf8</span>, (<span class="keyword">byte</span>) <span class="number">0xeb</span>, <span class="number">0x0f</span>, <span class="number">0x4b</span>, <span class="number">0x70</span>, <span class="number">0x56</span>, (<span class="keyword">byte</span>) <span class="number">0x9d</span>, <span class="number">0x35</span>, <span class="number">0x1e</span>, <span class="number">0x24</span>, <span class="number">0x0e</span>, <span class="number">0x5e</span>, <span class="number">0x63</span>, <span class="number">0x58</span>, (<span class="keyword">byte</span>) <span class="number">0xd1</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xa2</span>, <span class="number">0x25</span>, <span class="number">0x22</span>, <span class="number">0x7c</span>, <span class="number">0x3b</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x78</span>, (<span class="keyword">byte</span>) <span class="number">0x87</span>, (<span class="keyword">byte</span>) <span class="number">0xd4</span>, <span class="number">0x00</span>, <span class="number">0x46</span>, <span class="number">0x57</span>, (<span class="keyword">byte</span>) <span class="number">0x9f</span>, (<span class="keyword">byte</span>) <span class="number">0xd3</span>, <span class="number">0x27</span>,</span><br><span class="line">            <span class="number">0x52</span>, <span class="number">0x4c</span>, <span class="number">0x36</span>, <span class="number">0x02</span>, (<span class="keyword">byte</span>) <span class="number">0xe7</span>, (<span class="keyword">byte</span>) <span class="number">0xa0</span>, (<span class="keyword">byte</span>) <span class="number">0xc4</span>, (<span class="keyword">byte</span>) <span class="number">0xc8</span>, (<span class="keyword">byte</span>) <span class="number">0x9e</span>, (<span class="keyword">byte</span>) <span class="number">0xea</span>, (<span class="keyword">byte</span>) <span class="number">0xbf</span>, (<span class="keyword">byte</span>) <span class="number">0x8a</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xd2</span>, <span class="number">0x40</span>, (<span class="keyword">byte</span>) <span class="number">0xc7</span>, <span class="number">0x38</span>, (<span class="keyword">byte</span>) <span class="number">0xb5</span>, (<span class="keyword">byte</span>) <span class="number">0xa3</span>, (<span class="keyword">byte</span>) <span class="number">0xf7</span>, (<span class="keyword">byte</span>) <span class="number">0xf2</span>, (<span class="keyword">byte</span>) <span class="number">0xce</span>, (<span class="keyword">byte</span>) <span class="number">0xf9</span>, <span class="number">0x61</span>, <span class="number">0x15</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xa1</span>, (<span class="keyword">byte</span>) <span class="number">0xe0</span>, (<span class="keyword">byte</span>) <span class="number">0xae</span>, <span class="number">0x5d</span>, (<span class="keyword">byte</span>) <span class="number">0xa4</span>, (<span class="keyword">byte</span>) <span class="number">0x9b</span>, <span class="number">0x34</span>, <span class="number">0x1a</span>, <span class="number">0x55</span>, (<span class="keyword">byte</span>) <span class="number">0xad</span>, (<span class="keyword">byte</span>) <span class="number">0x93</span>, <span class="number">0x32</span>,</span><br><span class="line">            <span class="number">0x30</span>, (<span class="keyword">byte</span>) <span class="number">0xf5</span>, (<span class="keyword">byte</span>) <span class="number">0x8c</span>, (<span class="keyword">byte</span>) <span class="number">0xb1</span>, (<span class="keyword">byte</span>) <span class="number">0xe3</span>, <span class="number">0x1d</span>, (<span class="keyword">byte</span>) <span class="number">0xf6</span>, (<span class="keyword">byte</span>) <span class="number">0xe2</span>, <span class="number">0x2e</span>, (<span class="keyword">byte</span>) <span class="number">0x82</span>, <span class="number">0x66</span>, (<span class="keyword">byte</span>) <span class="number">0xca</span>,</span><br><span class="line">            <span class="number">0x60</span>, (<span class="keyword">byte</span>) <span class="number">0xc0</span>, <span class="number">0x29</span>, <span class="number">0x23</span>, (<span class="keyword">byte</span>) <span class="number">0xab</span>, <span class="number">0x0d</span>, <span class="number">0x53</span>, <span class="number">0x4e</span>, <span class="number">0x6f</span>, (<span class="keyword">byte</span>) <span class="number">0xd5</span>, (<span class="keyword">byte</span>) <span class="number">0xdb</span>, <span class="number">0x37</span>, <span class="number">0x45</span>, (<span class="keyword">byte</span>) <span class="number">0xde</span>, (<span class="keyword">byte</span>) <span class="number">0xfd</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0x8e</span>, <span class="number">0x2f</span>, <span class="number">0x03</span>, (<span class="keyword">byte</span>) <span class="number">0xff</span>, <span class="number">0x6a</span>, <span class="number">0x72</span>, <span class="number">0x6d</span>, <span class="number">0x6c</span>, <span class="number">0x5b</span>, <span class="number">0x51</span>, (<span class="keyword">byte</span>) <span class="number">0x8d</span>, <span class="number">0x1b</span>, (<span class="keyword">byte</span>) <span class="number">0xaf</span>, (<span class="keyword">byte</span>) <span class="number">0x92</span>, (<span class="keyword">byte</span>) <span class="number">0xbb</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xdd</span>, (<span class="keyword">byte</span>) <span class="number">0xbc</span>, <span class="number">0x7f</span>, <span class="number">0x11</span>, (<span class="keyword">byte</span>) <span class="number">0xd9</span>, <span class="number">0x5c</span>, <span class="number">0x41</span>, <span class="number">0x1f</span>, <span class="number">0x10</span>, <span class="number">0x5a</span>, (<span class="keyword">byte</span>) <span class="number">0xd8</span>, <span class="number">0x0a</span>, (<span class="keyword">byte</span>) <span class="number">0xc1</span>, <span class="number">0x31</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0x88</span>, (<span class="keyword">byte</span>) <span class="number">0xa5</span>, (<span class="keyword">byte</span>) <span class="number">0xcd</span>, <span class="number">0x7b</span>, (<span class="keyword">byte</span>) <span class="number">0xbd</span>, <span class="number">0x2d</span>, <span class="number">0x74</span>, (<span class="keyword">byte</span>) <span class="number">0xd0</span>, <span class="number">0x12</span>, (<span class="keyword">byte</span>) <span class="number">0xb8</span>, (<span class="keyword">byte</span>) <span class="number">0xe5</span>, (<span class="keyword">byte</span>) <span class="number">0xb4</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xb0</span>, (<span class="keyword">byte</span>) <span class="number">0x89</span>, <span class="number">0x69</span>, (<span class="keyword">byte</span>) <span class="number">0x97</span>, <span class="number">0x4a</span>, <span class="number">0x0c</span>, (<span class="keyword">byte</span>) <span class="number">0x96</span>, <span class="number">0x77</span>, <span class="number">0x7e</span>, <span class="number">0x65</span>, (<span class="keyword">byte</span>) <span class="number">0xb9</span>, (<span class="keyword">byte</span>) <span class="number">0xf1</span>, <span class="number">0x09</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xc5</span>, <span class="number">0x6e</span>, (<span class="keyword">byte</span>) <span class="number">0xc6</span>, (<span class="keyword">byte</span>) <span class="number">0x84</span>, <span class="number">0x18</span>, (<span class="keyword">byte</span>) <span class="number">0xf0</span>, <span class="number">0x7d</span>, (<span class="keyword">byte</span>) <span class="number">0xec</span>, <span class="number">0x3a</span>, (<span class="keyword">byte</span>) <span class="number">0xdc</span>, <span class="number">0x4d</span>, <span class="number">0x20</span>, <span class="number">0x79</span>,</span><br><span class="line">            (<span class="keyword">byte</span>) <span class="number">0xee</span>, <span class="number">0x5f</span>, <span class="number">0x3e</span>, (<span class="keyword">byte</span>) <span class="number">0xd7</span>, (<span class="keyword">byte</span>) <span class="number">0xcb</span>, <span class="number">0x39</span>, <span class="number">0x48</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>[] FK = &#123;<span class="number">0xa3b1bac6</span>, <span class="number">0x56aa3350</span>, <span class="number">0x677d9197</span>, <span class="number">0xb27022dc</span>&#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>[] CK = &#123;</span><br><span class="line">            <span class="number">0x00070e15</span>, <span class="number">0x1c232a31</span>, <span class="number">0x383f464d</span>, <span class="number">0x545b6269</span>, <span class="number">0x70777e85</span>, <span class="number">0x8c939aa1</span>, <span class="number">0xa8afb6bd</span>, <span class="number">0xc4cbd2d9</span>,</span><br><span class="line">            <span class="number">0xe0e7eef5</span>, <span class="number">0xfc030a11</span>, <span class="number">0x181f262d</span>, <span class="number">0x343b4249</span>, <span class="number">0x50575e65</span>, <span class="number">0x6c737a81</span>, <span class="number">0x888f969d</span>, <span class="number">0xa4abb2b9</span>,</span><br><span class="line">            <span class="number">0xc0c7ced5</span>, <span class="number">0xdce3eaf1</span>, <span class="number">0xf8ff060d</span>, <span class="number">0x141b2229</span>, <span class="number">0x30373e45</span>, <span class="number">0x4c535a61</span>, <span class="number">0x686f767d</span>, <span class="number">0x848b9299</span>,</span><br><span class="line">            <span class="number">0xa0a7aeb5</span>, <span class="number">0xbcc3cad1</span>, <span class="number">0xd8dfe6ed</span>, <span class="number">0xf4fb0209</span>, <span class="number">0x10171e25</span>, <span class="number">0x2c333a41</span>, <span class="number">0x484f565d</span>, <span class="number">0x646b7279</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">GET_ULONG_BE</span><span class="params">(<span class="keyword">byte</span>[] b, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> n = (<span class="keyword">long</span>) (b[i] &amp; <span class="number">0xff</span>) &lt;&lt; <span class="number">24</span> | (<span class="keyword">long</span>) ((b[i + <span class="number">1</span>] &amp; <span class="number">0xff</span>) &lt;&lt; <span class="number">16</span>) | (<span class="keyword">long</span>) ((b[i + <span class="number">2</span>] &amp; <span class="number">0xff</span>) &lt;&lt; <span class="number">8</span>) | (<span class="keyword">long</span>) (b[i + <span class="number">3</span>] &amp; <span class="number">0xff</span>) &amp; <span class="number">0xffffffffL</span>;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PUT_ULONG_BE</span><span class="params">(<span class="keyword">long</span> n, <span class="keyword">byte</span>[] b, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        b[i] = (<span class="keyword">byte</span>) (<span class="keyword">int</span>) (<span class="number">0xFF</span> &amp; n &gt;&gt; <span class="number">24</span>);</span><br><span class="line">        b[i + <span class="number">1</span>] = (<span class="keyword">byte</span>) (<span class="keyword">int</span>) (<span class="number">0xFF</span> &amp; n &gt;&gt; <span class="number">16</span>);</span><br><span class="line">        b[i + <span class="number">2</span>] = (<span class="keyword">byte</span>) (<span class="keyword">int</span>) (<span class="number">0xFF</span> &amp; n &gt;&gt; <span class="number">8</span>);</span><br><span class="line">        b[i + <span class="number">3</span>] = (<span class="keyword">byte</span>) (<span class="keyword">int</span>) (<span class="number">0xFF</span> &amp; n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">SHL</span><span class="params">(<span class="keyword">long</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (x &amp; <span class="number">0xFFFFFFFF</span>) &lt;&lt; n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">ROTL</span><span class="params">(<span class="keyword">long</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SHL(x, n) | x &gt;&gt; <span class="number">32</span> - n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SWAP</span><span class="params">(<span class="keyword">long</span>[] sk, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> t = sk[i];</span><br><span class="line">        sk[i] = sk[<span class="number">31</span> - i];</span><br><span class="line">        sk[<span class="number">31</span> - i] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">byte</span> <span class="title">sm4Sbox</span><span class="params">(<span class="keyword">byte</span> inch)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = inch &amp; <span class="number">0xFF</span>;</span><br><span class="line">        <span class="keyword">byte</span> retVal = SBOX_TABLE[i];</span><br><span class="line">        <span class="keyword">return</span> retVal;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">sm4Lt</span><span class="params">(<span class="keyword">long</span> ka)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> bb = <span class="number">0L</span>;</span><br><span class="line">        <span class="keyword">long</span> c = <span class="number">0L</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] a = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">        PUT_ULONG_BE(ka, a, <span class="number">0</span>);</span><br><span class="line">        b[<span class="number">0</span>] = sm4Sbox(a[<span class="number">0</span>]);</span><br><span class="line">        b[<span class="number">1</span>] = sm4Sbox(a[<span class="number">1</span>]);</span><br><span class="line">        b[<span class="number">2</span>] = sm4Sbox(a[<span class="number">2</span>]);</span><br><span class="line">        b[<span class="number">3</span>] = sm4Sbox(a[<span class="number">3</span>]);</span><br><span class="line">        bb = GET_ULONG_BE(b, <span class="number">0</span>);</span><br><span class="line">        c = bb ^ ROTL(bb, <span class="number">2</span>) ^ ROTL(bb, <span class="number">10</span>) ^ ROTL(bb, <span class="number">18</span>) ^ ROTL(bb, <span class="number">24</span>);</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">sm4F</span><span class="params">(<span class="keyword">long</span> x0, <span class="keyword">long</span> x1, <span class="keyword">long</span> x2, <span class="keyword">long</span> x3, <span class="keyword">long</span> rk)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x0 ^ sm4Lt(x1 ^ x2 ^ x3 ^ rk);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">sm4CalciRK</span><span class="params">(<span class="keyword">long</span> ka)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> bb = <span class="number">0L</span>;</span><br><span class="line">        <span class="keyword">long</span> rk = <span class="number">0L</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] a = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">        PUT_ULONG_BE(ka, a, <span class="number">0</span>);</span><br><span class="line">        b[<span class="number">0</span>] = sm4Sbox(a[<span class="number">0</span>]);</span><br><span class="line">        b[<span class="number">1</span>] = sm4Sbox(a[<span class="number">1</span>]);</span><br><span class="line">        b[<span class="number">2</span>] = sm4Sbox(a[<span class="number">2</span>]);</span><br><span class="line">        b[<span class="number">3</span>] = sm4Sbox(a[<span class="number">3</span>]);</span><br><span class="line">        bb = GET_ULONG_BE(b, <span class="number">0</span>);</span><br><span class="line">        rk = bb ^ ROTL(bb, <span class="number">13</span>) ^ ROTL(bb, <span class="number">23</span>);</span><br><span class="line">        <span class="keyword">return</span> rk;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sm4_setkey</span><span class="params">(<span class="keyword">long</span>[] SK, <span class="keyword">byte</span>[] key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span>[] MK = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">long</span>[] k = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">36</span>];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        MK[<span class="number">0</span>] = GET_ULONG_BE(key, <span class="number">0</span>);</span><br><span class="line">        MK[<span class="number">1</span>] = GET_ULONG_BE(key, <span class="number">4</span>);</span><br><span class="line">        MK[<span class="number">2</span>] = GET_ULONG_BE(key, <span class="number">8</span>);</span><br><span class="line">        MK[<span class="number">3</span>] = GET_ULONG_BE(key, <span class="number">12</span>);</span><br><span class="line">        k[<span class="number">0</span>] = MK[<span class="number">0</span>] ^ (<span class="keyword">long</span>) FK[<span class="number">0</span>];</span><br><span class="line">        k[<span class="number">1</span>] = MK[<span class="number">1</span>] ^ (<span class="keyword">long</span>) FK[<span class="number">1</span>];</span><br><span class="line">        k[<span class="number">2</span>] = MK[<span class="number">2</span>] ^ (<span class="keyword">long</span>) FK[<span class="number">2</span>];</span><br><span class="line">        k[<span class="number">3</span>] = MK[<span class="number">3</span>] ^ (<span class="keyword">long</span>) FK[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span> (; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">            k[i + <span class="number">4</span>] = k[i] ^ sm4CalciRK(k[i + <span class="number">1</span>] ^ k[i + <span class="number">2</span>] ^ k[i + <span class="number">3</span>] ^ (<span class="keyword">long</span>) CK[i]);</span><br><span class="line">            SK[i] = k[i + <span class="number">4</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sm4_one_round</span><span class="params">(<span class="keyword">long</span>[] sk, <span class="keyword">byte</span>[] input, <span class="keyword">byte</span>[] output)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span>[] ulbuf = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">36</span>];</span><br><span class="line">        ulbuf[<span class="number">0</span>] = GET_ULONG_BE(input, <span class="number">0</span>);</span><br><span class="line">        ulbuf[<span class="number">1</span>] = GET_ULONG_BE(input, <span class="number">4</span>);</span><br><span class="line">        ulbuf[<span class="number">2</span>] = GET_ULONG_BE(input, <span class="number">8</span>);</span><br><span class="line">        ulbuf[<span class="number">3</span>] = GET_ULONG_BE(input, <span class="number">12</span>);</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">32</span>) &#123;</span><br><span class="line">            ulbuf[i + <span class="number">4</span>] = sm4F(ulbuf[i], ulbuf[i + <span class="number">1</span>], ulbuf[i + <span class="number">2</span>], ulbuf[i + <span class="number">3</span>], sk[i]);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        PUT_ULONG_BE(ulbuf[<span class="number">35</span>], output, <span class="number">0</span>);</span><br><span class="line">        PUT_ULONG_BE(ulbuf[<span class="number">34</span>], output, <span class="number">4</span>);</span><br><span class="line">        PUT_ULONG_BE(ulbuf[<span class="number">33</span>], output, <span class="number">8</span>);</span><br><span class="line">        PUT_ULONG_BE(ulbuf[<span class="number">32</span>], output, <span class="number">12</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] padding(<span class="keyword">byte</span>[] input, <span class="keyword">int</span> mode) &#123;</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] ret;</span><br><span class="line">        <span class="keyword">if</span> (mode == SM4_ENCRYPT) &#123;</span><br><span class="line">            <span class="keyword">int</span> inputLength = input.length;</span><br><span class="line">            String paddingPrefix = String.valueOf(inputLength);</span><br><span class="line">            <span class="keyword">int</span> paddingPrefixLength = <span class="number">4</span> - paddingPrefix.length();</span><br><span class="line">            StringBuffer prefixBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; paddingPrefixLength; i++) &#123;</span><br><span class="line">                prefixBuffer.append(<span class="string">"0"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            paddingPrefix = ByteUtils.toHexString(prefixBuffer.append(paddingPrefix).toString().getBytes());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> paddingLength = <span class="number">16</span> - (inputLength + <span class="number">4</span>) % <span class="number">16</span>;</span><br><span class="line">            String inputHex = ByteUtils.toHexString(input);</span><br><span class="line">            StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer(paddingPrefix);</span><br><span class="line">            stringBuffer.append(inputHex);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; paddingLength; i++) &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">"00"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            ret = ByteUtils.fromHexString(stringBuffer.toString());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            String inputHex = ByteUtils.toHexString(input);</span><br><span class="line">            String paddingPrefix = inputHex.substring(<span class="number">0</span>, <span class="number">8</span>);</span><br><span class="line">            paddingPrefix = <span class="keyword">new</span> String(ByteUtils.fromHexString(paddingPrefix));</span><br><span class="line">            <span class="keyword">int</span> dataLength = Integer.valueOf(paddingPrefix);</span><br><span class="line"></span><br><span class="line">            String dataHex = inputHex.substring(<span class="number">8</span>, dataLength * <span class="number">2</span> + <span class="number">8</span>);</span><br><span class="line">            ret = ByteUtils.fromHexString(dataHex);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] paddingOld(<span class="keyword">byte</span>[] input, <span class="keyword">int</span> mode) &#123;</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] ret;</span><br><span class="line">        <span class="keyword">if</span> (mode == SM4_ENCRYPT) &#123;</span><br><span class="line">            String origin = <span class="keyword">new</span> String(input);</span><br><span class="line">            <span class="keyword">int</span> inputLength = origin.length();</span><br><span class="line">            String paddingPrefix = String.valueOf(inputLength);</span><br><span class="line">            <span class="keyword">int</span> paddingPrefixLength = <span class="number">4</span> - paddingPrefix.length();</span><br><span class="line">            StringBuffer prefixBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; paddingPrefixLength; i++) &#123;</span><br><span class="line">                prefixBuffer.append(<span class="string">"0"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            paddingPrefix = prefixBuffer.append(paddingPrefix).toString();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> paddingLength = <span class="number">16</span> - (inputLength + <span class="number">4</span>) % <span class="number">16</span>;</span><br><span class="line">            StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer(paddingPrefix);</span><br><span class="line">            stringBuffer.append(origin);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; paddingLength; i++) &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">"0"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            ret = stringBuffer.toString().getBytes();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            String origin = <span class="keyword">new</span> String(input);</span><br><span class="line">            String paddingPrefix = origin.substring(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="keyword">int</span> dataLength = Integer.valueOf(paddingPrefix);</span><br><span class="line"></span><br><span class="line">            String data = origin.substring(<span class="number">4</span>, dataLength + <span class="number">4</span>);</span><br><span class="line">            ret = data.getBytes();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sm4_setkey_enc</span><span class="params">(SM4Context ctx, <span class="keyword">byte</span>[] key)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ctx == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"SM4 sm4_setkey_enc SM4Context is null!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="keyword">null</span> || key.length != <span class="number">16</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"SM4 sm4_setkey_enc key byte array error!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ctx.mode = SM4_ENCRYPT;</span><br><span class="line">        sm4_setkey(ctx.sk, key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sm4_setkey_dec</span><span class="params">(SM4Context ctx, <span class="keyword">byte</span>[] key)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ctx == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"SM4 sm4_setkey_dec SM4Context is null!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="keyword">null</span> || key.length != <span class="number">16</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"SM4 sm4_setkey_dec key byte array error!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        ctx.mode = SM4_DECRYPT;</span><br><span class="line">        sm4_setkey(ctx.sk, key);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">            SWAP(ctx.sk, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] sm4_crypt_ecb(SM4Context ctx, <span class="keyword">byte</span>[] input) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"SM4 sm4_crypt_ecb input byte array is null!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ctx.isPadding &amp;&amp; ctx.mode == SM4_ENCRYPT) &#123;</span><br><span class="line">            input = padding(input, SM4_ENCRYPT);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> length = input.length;</span><br><span class="line">        ByteArrayInputStream bins = <span class="keyword">new</span> ByteArrayInputStream(input);</span><br><span class="line">        ByteArrayOutputStream bous = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">for</span> (; length &gt; <span class="number">0</span>; length -= <span class="number">16</span>) &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] in = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">16</span>];</span><br><span class="line">            <span class="keyword">byte</span>[] out = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">16</span>];</span><br><span class="line">            bins.read(in);</span><br><span class="line">            sm4_one_round(ctx.sk, in, out);</span><br><span class="line">            bous.write(out);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] output = bous.toByteArray();</span><br><span class="line">        <span class="keyword">if</span> (ctx.isPadding &amp;&amp; ctx.mode == SM4_DECRYPT) &#123;</span><br><span class="line">            output = padding(output, SM4_DECRYPT);</span><br><span class="line">        &#125;</span><br><span class="line">        bins.close();</span><br><span class="line">        bous.close();</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SM4Utils</code>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SM4Utils</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptDataEcb</span><span class="params">(String plainText, String sm4Key)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SM4Context ctx = <span class="keyword">new</span> SM4Context();</span><br><span class="line">        ctx.isPadding = <span class="keyword">true</span>;</span><br><span class="line">        ctx.mode = SM4.SM4_ENCRYPT;</span><br><span class="line"></span><br><span class="line">        SM4 sm4 = <span class="keyword">new</span> SM4();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] keyBytes = ByteUtils.fromHexString(sm4Key);</span><br><span class="line">        sm4.sm4_setkey_enc(ctx, keyBytes);</span><br><span class="line">        <span class="keyword">byte</span>[] encrypted = sm4.sm4_crypt_ecb(ctx, ByteUtils.fromHexString(plainText));</span><br><span class="line">        <span class="keyword">return</span> ByteUtils.toHexString(encrypted);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decryptDataEcb</span><span class="params">(String cipherText, String sm4Key)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SM4Context ctx = <span class="keyword">new</span> SM4Context();</span><br><span class="line">        ctx.isPadding = <span class="keyword">true</span>;</span><br><span class="line">        ctx.mode = SM4.SM4_DECRYPT;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] keyBytes = ByteUtils.fromHexString(sm4Key);</span><br><span class="line"></span><br><span class="line">        SM4 sm4 = <span class="keyword">new</span> SM4();</span><br><span class="line">        sm4.sm4_setkey_dec(ctx, keyBytes);</span><br><span class="line">        <span class="keyword">byte</span>[] decrypted = sm4.sm4_crypt_ecb(ctx, Base64.decodeBase64(cipherTextTransform(cipherText)));</span><br><span class="line">        <span class="keyword">return</span> ByteUtils.toHexString(decrypted);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">cipherTextTransform</span><span class="params">(String cipherText)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] encrypted = ByteUtils.fromHexString(cipherText);</span><br><span class="line">        cipherText = Base64.encodeBase64String(encrypted);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(cipherText)) &#123;</span><br><span class="line">            Pattern p = Pattern.compile(<span class="string">"\\s*|\t|\r|\n"</span>);</span><br><span class="line">            Matcher m = p.matcher(cipherText);</span><br><span class="line">            cipherText = m.replaceAll(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cipherText;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;SM4&lt;/code&gt; 无线局域网标准的&lt;strong&gt;分组数据算法&lt;/strong&gt;。&lt;strong&gt;对称加密&lt;/strong&gt;，&lt;strong&gt;密钥长度和分组长度均为128位&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分组密码常用得五种模式，这里主要讲&lt;code&gt;SM
      
    
    </summary>
    
      <category term="Java" scheme="https://yaoyinglong.github.io/categories/Java/"/>
    
      <category term="工具" scheme="https://yaoyinglong.github.io/categories/Java/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="国密" scheme="https://yaoyinglong.github.io/tags/%E5%9B%BD%E5%AF%86/"/>
    
      <category term="SM4" scheme="https://yaoyinglong.github.io/tags/SM4/"/>
    
  </entry>
  
  <entry>
    <title>国密SM2</title>
    <link href="https://yaoyinglong.github.io/Blog/Java/%E5%B7%A5%E5%85%B7/%E5%9B%BD%E5%AF%86SM2/"/>
    <id>https://yaoyinglong.github.io/Blog/Java/工具/国密SM2/</id>
    <published>2019-10-27T16:00:00.000Z</published>
    <updated>2020-06-19T01:57:33.330Z</updated>
    
    <content type="html"><![CDATA[<p><code>SM2</code>为<strong>非对称</strong>加密，基于<code>ECC</code> 椭圆曲线密码机制。该算法已公开。由于该算法基于<code>ECC</code>，故其签名速度与秘钥生成速度都<strong>快于RSA</strong>。<code>ECC 256</code>位（<code>SM2</code>采用的就是<code>ECC 256</code>位的一种）<strong>安全强度比RSA 2048位高</strong>，但运算速度<strong>快于RSA</strong>。</p><p><code>Maven</code>配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.bouncycastle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>bcpkix-jdk15on<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="特别关注"><a href="#特别关注" class="headerlink" title="特别关注"></a>特别关注</h3><p>对于<code>SM2</code>加解密，需要注意三点，首先需要注意加密处理的<strong>密文顺序</strong>，关于<strong>密钥的使用</strong>，以及<strong>加解密的HEX转码</strong>问题。</p><h5 id="加密处理的密文顺序"><a href="#加密处理的密文顺序" class="headerlink" title="加密处理的密文顺序"></a>加密处理的密文顺序</h5><ul><li>注意约定<code>C1</code>、<code>C2</code>、<code>C3</code>的拼装顺序（参照下面加密相关的代码内容，示例顺序为：<code>C1+C2+C3</code>）</li></ul><h5 id="密钥的使用"><a href="#密钥的使用" class="headerlink" title="密钥的使用"></a>密钥的使用</h5><ul><li>有的生成的公钥是带<code>04</code>前缀，有的是不带的。在使用时最对实际情况进行<code>04</code>的截取或补充（示例是带<code>04</code>的）</li><li>有的生成的私钥前缀带有<code>00</code>，有的是不带<code>00</code>的，在使用时最对实际情况进行<code>00</code>的截取或补充（示例是不带<code>00</code>的）</li></ul><h5 id="HEX转码问题"><a href="#HEX转码问题" class="headerlink" title="HEX转码问题"></a>HEX转码问题</h5><ul><li><code>SM2</code>加解密过程中会多次进行<code>HEX</code>的编码何解码，调试时需要注意</li><li>在进行<code>HEX</code>编码时，注意中文的编码格式</li></ul><h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><p><code>Cipher</code>代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cipher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ct;</span><br><span class="line">    <span class="keyword">private</span> ECPoint p2;</span><br><span class="line">    <span class="keyword">private</span> SM3Digest sm3keybase;</span><br><span class="line">    <span class="keyword">private</span> SM3Digest sm3c3;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] key;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span> keyOff;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Cipher</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ct = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.key = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">32</span>];</span><br><span class="line">        <span class="keyword">this</span>.keyOff = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Reset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sm3keybase = <span class="keyword">new</span> SM3Digest();</span><br><span class="line">        <span class="keyword">this</span>.sm3c3 = <span class="keyword">new</span> SM3Digest();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] publicKeyX = HexUtil.byteConvert32Bytes(p2.getX().toBigInteger());</span><br><span class="line">        <span class="keyword">this</span>.sm3keybase.update(publicKeyX, <span class="number">0</span>, publicKeyX.length);</span><br><span class="line">        <span class="keyword">this</span>.sm3c3.update(publicKeyX, <span class="number">0</span>, publicKeyX.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] publicKeyY = HexUtil.byteConvert32Bytes(p2.getY().toBigInteger());</span><br><span class="line">        <span class="keyword">this</span>.sm3keybase.update(publicKeyY, <span class="number">0</span>, publicKeyY.length);</span><br><span class="line">        <span class="keyword">this</span>.ct = <span class="number">1</span>;</span><br><span class="line">        NextKey();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">NextKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SM3Digest sm3keycur = <span class="keyword">new</span> SM3Digest(<span class="keyword">this</span>.sm3keybase);</span><br><span class="line">        sm3keycur.update((<span class="keyword">byte</span>) (ct &gt;&gt; <span class="number">24</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">        sm3keycur.update((<span class="keyword">byte</span>) (ct &gt;&gt; <span class="number">16</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">        sm3keycur.update((<span class="keyword">byte</span>) (ct &gt;&gt; <span class="number">8</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">        sm3keycur.update((<span class="keyword">byte</span>) (ct &amp; <span class="number">0xff</span>));</span><br><span class="line">        sm3keycur.doFinal(key, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">this</span>.keyOff = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.ct++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ECPoint <span class="title">Init_enc</span><span class="params">(SM2 sm2, ECPoint userKey)</span> </span>&#123;</span><br><span class="line">        AsymmetricCipherKeyPair key = sm2.ecc_key_pair_generator.generateKeyPair();</span><br><span class="line">        ECPrivateKeyParameters ecpriv = (ECPrivateKeyParameters) key.getPrivate();</span><br><span class="line">        ECPublicKeyParameters ecpub = (ECPublicKeyParameters) key.getPublic();</span><br><span class="line">        BigInteger k = ecpriv.getD();</span><br><span class="line">        ECPoint c1 = ecpub.getQ();</span><br><span class="line">        <span class="keyword">this</span>.p2 = userKey.multiply(k);</span><br><span class="line">        Reset();</span><br><span class="line">        <span class="keyword">return</span> c1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Encrypt</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sm3c3.update(data, <span class="number">0</span>, data.length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (keyOff == key.length) &#123;</span><br><span class="line">                NextKey();</span><br><span class="line">            &#125;</span><br><span class="line">            data[i] ^= key[keyOff++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Init_dec</span><span class="params">(BigInteger userD, ECPoint c1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.p2 = c1.multiply(userD);</span><br><span class="line">        Reset();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Decrypt</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (keyOff == key.length) &#123;</span><br><span class="line">                NextKey();</span><br><span class="line">            &#125;</span><br><span class="line">            data[i] ^= key[keyOff++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.sm3c3.update(data, <span class="number">0</span>, data.length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Dofinal</span><span class="params">(<span class="keyword">byte</span>[] c3)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] publicKeyY = HexUtil.byteConvert32Bytes(p2.getY().toBigInteger());</span><br><span class="line">        <span class="keyword">this</span>.sm3c3.update(publicKeyY, <span class="number">0</span>, publicKeyY.length);</span><br><span class="line">        <span class="keyword">this</span>.sm3c3.doFinal(c3, <span class="number">0</span>);</span><br><span class="line">        Reset();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SM2</code>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SM2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] ECC_PARAM = &#123;</span><br><span class="line">            <span class="string">"FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF"</span>,</span><br><span class="line">            <span class="string">"FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFC"</span>,</span><br><span class="line">            <span class="string">"28E9FA9E9D9F5E344D5A9E4BCF6509A7F39789F515AB8F92DDBCBD414D940E93"</span>,</span><br><span class="line">            <span class="string">"FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF7203DF6B21C6052B53BBF40939D54123"</span>,</span><br><span class="line">            <span class="string">"32C4AE2C1F1981195F9904466A39C9948FE30BBFF2660BE1715A4589334C74C7"</span>,</span><br><span class="line">            <span class="string">"BC3736A2F4F6779C59BDCEE36B692153D0A9877CC62A474002DF32E52139F0A0"</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> BigInteger ecc_p;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> BigInteger ecc_a;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> BigInteger ecc_b;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> BigInteger ecc_n;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> BigInteger ecc_gx;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> BigInteger ecc_gy;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> ECCurve ecc_curve;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> ECPoint ecc_point_g;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> ECDomainParameters ecc_bc_spec;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> ECKeyPairGenerator ecc_key_pair_generator;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> ECFieldElement ecc_gx_fieldelement;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> ECFieldElement ecc_gy_fieldelement;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SM2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ecc_p = <span class="keyword">new</span> BigInteger(ECC_PARAM[<span class="number">0</span>], <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">this</span>.ecc_a = <span class="keyword">new</span> BigInteger(ECC_PARAM[<span class="number">1</span>], <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">this</span>.ecc_b = <span class="keyword">new</span> BigInteger(ECC_PARAM[<span class="number">2</span>], <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">this</span>.ecc_n = <span class="keyword">new</span> BigInteger(ECC_PARAM[<span class="number">3</span>], <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">this</span>.ecc_gx = <span class="keyword">new</span> BigInteger(ECC_PARAM[<span class="number">4</span>], <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">this</span>.ecc_gy = <span class="keyword">new</span> BigInteger(ECC_PARAM[<span class="number">5</span>], <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.ecc_gx_fieldelement = <span class="keyword">new</span> Fp(<span class="keyword">this</span>.ecc_p, <span class="keyword">this</span>.ecc_gx);</span><br><span class="line">        <span class="keyword">this</span>.ecc_gy_fieldelement = <span class="keyword">new</span> Fp(<span class="keyword">this</span>.ecc_p, <span class="keyword">this</span>.ecc_gy);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.ecc_curve = <span class="keyword">new</span> ECCurve.Fp(<span class="keyword">this</span>.ecc_p, <span class="keyword">this</span>.ecc_a, <span class="keyword">this</span>.ecc_b);</span><br><span class="line">        <span class="keyword">this</span>.ecc_point_g = <span class="keyword">new</span> ECPoint.Fp(<span class="keyword">this</span>.ecc_curve, <span class="keyword">this</span>.ecc_gx_fieldelement, <span class="keyword">this</span>.ecc_gy_fieldelement);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.ecc_bc_spec = <span class="keyword">new</span> ECDomainParameters(<span class="keyword">this</span>.ecc_curve, <span class="keyword">this</span>.ecc_point_g, <span class="keyword">this</span>.ecc_n);</span><br><span class="line"></span><br><span class="line">        ECKeyGenerationParameters ecc_ecgenparam;</span><br><span class="line">        ecc_ecgenparam = <span class="keyword">new</span> ECKeyGenerationParameters(<span class="keyword">this</span>.ecc_bc_spec, <span class="keyword">new</span> SecureRandom());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.ecc_key_pair_generator = <span class="keyword">new</span> ECKeyPairGenerator();</span><br><span class="line">        <span class="keyword">this</span>.ecc_key_pair_generator.init(ecc_ecgenparam);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SM2 <span class="title">Instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SM2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SM2Utils</code>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SM2Utils</span> </span>&#123;</span><br><span class="line">    <span class="comment">//生成随机秘钥对</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">generateKeyPair</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SM2 sm2 = SM2.Instance();</span><br><span class="line">        AsymmetricCipherKeyPair key = sm2.ecc_key_pair_generator.generateKeyPair();</span><br><span class="line">        ECPrivateKeyParameters ecpriv = (ECPrivateKeyParameters) key.getPrivate();</span><br><span class="line">        ECPublicKeyParameters ecpub = (ECPublicKeyParameters) key.getPublic();</span><br><span class="line">        BigInteger privateKey = ecpriv.getD();</span><br><span class="line">        ECPoint publicKey = ecpub.getQ();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"公钥: "</span> + ByteUtils.toHexString(publicKey.getEncoded()));</span><br><span class="line">        System.out.println(<span class="string">"私钥: "</span> + ByteUtils.toHexString(privateKey.toByteArray()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//数据加密</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encrypt</span><span class="params">(String publicKey, String plainText)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(publicKey) || StringUtils.isBlank(plainText)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] publicKeyBytes = ByteUtils.fromHexString(publicKey);</span><br><span class="line">        <span class="keyword">byte</span>[] plainTextBytes = ByteUtils.fromHexString(plainText);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] source = <span class="keyword">new</span> <span class="keyword">byte</span>[plainTextBytes.length];</span><br><span class="line">        System.arraycopy(plainTextBytes, <span class="number">0</span>, source, <span class="number">0</span>, plainTextBytes.length);</span><br><span class="line"></span><br><span class="line">        Cipher cipher = <span class="keyword">new</span> Cipher();</span><br><span class="line">        SM2 sm2 = SM2.Instance();</span><br><span class="line">        ECPoint userKey = sm2.ecc_curve.decodePoint(publicKeyBytes);</span><br><span class="line">        ECPoint c1 = cipher.Init_enc(sm2, userKey);</span><br><span class="line"></span><br><span class="line">        cipher.Encrypt(source);</span><br><span class="line">        <span class="keyword">byte</span>[] c3 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">32</span>];</span><br><span class="line">        cipher.Dofinal(c3);</span><br><span class="line">        <span class="comment">//C1 C2 C3拼装成加密字串</span></span><br><span class="line">        <span class="keyword">return</span> ByteUtils.toHexString(c1.getEncoded()) + ByteUtils.toHexString(source) + ByteUtils.toHexString(c3);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//数据解密</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decrypt(String privateKey, String cipherText) &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(privateKey) || StringUtils.isBlank(cipherText)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] privateKeyBytes = ByteUtils.fromHexString(privateKey);</span><br><span class="line">        <span class="keyword">byte</span>[] cipherTextBytes = ByteUtils.fromHexString(cipherText);</span><br><span class="line">        <span class="comment">//加密字节数组转换为十六进制的字符串 长度变为encryptedData.length * 2</span></span><br><span class="line">        String data = ByteUtils.toHexString(cipherTextBytes);</span><br><span class="line">        <span class="comment">/***分解加密字串</span></span><br><span class="line"><span class="comment">         * （C1 = C1标志位2位 + C1实体部分128位 = 130）</span></span><br><span class="line"><span class="comment">         * （C3 = C3实体部分64位  = 64）</span></span><br><span class="line"><span class="comment">         * （C2 = encryptedData.length * 2 - C1长度  - C2长度）</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">byte</span>[] c1Bytes = ByteUtils.fromHexString(data.substring(<span class="number">0</span>, <span class="number">130</span>));</span><br><span class="line">        <span class="keyword">int</span> c2Len = cipherTextBytes.length - <span class="number">97</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] c2 = ByteUtils.fromHexString(data.substring(<span class="number">130</span>, <span class="number">130</span> + <span class="number">2</span> * c2Len));</span><br><span class="line">        <span class="keyword">byte</span>[] c3 = ByteUtils.fromHexString(data.substring(<span class="number">130</span> + <span class="number">2</span> * c2Len, <span class="number">194</span> + <span class="number">2</span> * c2Len));</span><br><span class="line"></span><br><span class="line">        SM2 sm2 = SM2.Instance();</span><br><span class="line">        BigInteger userD = <span class="keyword">new</span> BigInteger(<span class="number">1</span>, privateKeyBytes);</span><br><span class="line">        <span class="comment">//通过C1实体字节来生成ECPoint</span></span><br><span class="line">        ECPoint c1 = sm2.ecc_curve.decodePoint(c1Bytes);</span><br><span class="line">        Cipher cipher = <span class="keyword">new</span> Cipher();</span><br><span class="line">        cipher.Init_dec(userD, c1);</span><br><span class="line">        cipher.Decrypt(c2);</span><br><span class="line">        cipher.Dofinal(c3);</span><br><span class="line">        <span class="comment">//返回解密结果</span></span><br><span class="line">        <span class="keyword">return</span> c2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;SM2&lt;/code&gt;为&lt;strong&gt;非对称&lt;/strong&gt;加密，基于&lt;code&gt;ECC&lt;/code&gt; 椭圆曲线密码机制。该算法已公开。由于该算法基于&lt;code&gt;ECC&lt;/code&gt;，故其签名速度与秘钥生成速度都&lt;strong&gt;快于RSA&lt;/strong&gt;。&lt;
      
    
    </summary>
    
      <category term="Java" scheme="https://yaoyinglong.github.io/categories/Java/"/>
    
      <category term="工具" scheme="https://yaoyinglong.github.io/categories/Java/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="国密，SM2" scheme="https://yaoyinglong.github.io/tags/%E5%9B%BD%E5%AF%86%EF%BC%8CSM2/"/>
    
  </entry>
  
  <entry>
    <title>Maven Assembly标签全解</title>
    <link href="https://yaoyinglong.github.io/Blog/Maven/Maven%20Assembly%E6%A0%87%E7%AD%BE%E5%85%A8%E8%A7%A3/"/>
    <id>https://yaoyinglong.github.io/Blog/Maven/Maven Assembly标签全解/</id>
    <published>2019-10-27T16:00:00.000Z</published>
    <updated>2019-10-28T08:26:50.504Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">assembly</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/ASSEMBLY/2.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        设置此程序集的标识。这是来自此项目的特定文件组合的符号名称。此外，除了用于通过将生成的归档的值附加到组合包以明确命名组合包之外，该ID在部署时用作工件的分类器。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        (许多） 指定程序集的格式。通过目标参数而不是在这里指定格式通常会更好。例如，允许不同的配置文件生成不同类型的档案。</span></span><br><span class="line"><span class="comment">        可以提供多种格式，装配体插件将生成每种所需格式的档案。部署项目时，所有指定的文件格式也将被部署。</span></span><br><span class="line"><span class="comment">        通过在&lt;format&gt;子元素中提供以下值之一来指定格式：</span></span><br><span class="line"><span class="comment">        “zip” - 创建一个ZIP文件格式</span></span><br><span class="line"><span class="comment">        “tar” - 创建一个TAR格式</span></span><br><span class="line"><span class="comment">        “tar.gz”或“tgz” - 创建一个gzip'd TAR格式</span></span><br><span class="line"><span class="comment">        “tar.bz2”或“tbz2” - 创建一个bzip'd TAR格式</span></span><br><span class="line"><span class="comment">        “tar.snappy” - 创建一个灵活的TAR格式</span></span><br><span class="line"><span class="comment">        “tar.xz”或“txz” - 创建一个xz'd TAR格式</span></span><br><span class="line"><span class="comment">        “jar” - 创建一个JAR格式</span></span><br><span class="line"><span class="comment">        “dir” - 创建分解的目录格式</span></span><br><span class="line"><span class="comment">        “战争” - 创建一个WAR格式</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">formats</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        在最终归档中包含一个基本目录。例如，如果您正在创建一个名为“your-app”的程序集，则将includeBaseDirectory设置为true将创建一个包含此基本目录的归档文件。</span></span><br><span class="line"><span class="comment">        如果此选项设置为false，则创建的存档将其内容解压缩到当前目录。</span></span><br><span class="line"><span class="comment">        默认值是：true。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">includeBaseDirectory</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        设置生成的程序集归档的基本目录。如果没有设置，并且includeBaseDirectory == true，则将使用$ &#123;project.build.finalName&#125;。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">baseDirectory</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        在最终档案中包含一个网站目录。项目的站点目录位置由Assembly Plugin的siteDirectory参数确定。</span></span><br><span class="line"><span class="comment">        默认值是：false。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">includeSiteDirectory</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        （许多） 从常规归档流中过滤各种容器描述符的组件集合，因此可以将它们聚合然后添加。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List&lt;ContainerDescriptorHandlerConfig&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">containerDescriptorHandlers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            配置文件头部的过滤器，以启用各种类型的描述符片段（如components.xml，web.xml等）的聚合。</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">containerDescriptorHandler</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                处理程序的plexus角色提示，用于从容器中查找。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">handlerName</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                处理程序的配置选项。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--DOM--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">containerDescriptorHandler</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">containerDescriptorHandlers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        （许多） 指定在程序集中包含哪些模块文件。moduleSet是通过提供一个或多个&lt;moduleSet&gt;子元素来指定的。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List&lt;ModuleSet&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">moduleSets</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            moduleSet表示一个或多个在项目的pom.xml中存在的&lt;module&gt;项目。这使您可以包含属于项目&lt;modules&gt;的源代码或二进制文件。</span></span><br><span class="line"><span class="comment">            注意：从命令行使用&lt;moduleSets&gt;时，需要先通过“mvn package assembly：assembly”来传递包阶段。这个bug计划由Maven 2.1解决。</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">moduleSet</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                如果设置为true，则该插件将包含当前反应堆中的所有项目，以便在此ModuleSet中进行处理。这些将被 纳入/排除(includes/excludes) 规则。（从2.2开始）</span></span><br><span class="line"><span class="comment">                默认值是：false。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">useAllReactorProjects</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                如果设置为false，则该插件将从该ModuleSet中排除子模块的处理。否则，它将处理所有子模块，每个子模块都要遵守包含/排除规则。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                默认值是：true。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includeSubModules</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                （许多） 当存在&lt;include&gt;子元素时，它们定义一组包含的项目坐标。如果不存在，则&lt;includes&gt;表示所有有效值。</span></span><br><span class="line"><span class="comment">                工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                （许多） 当存在&lt;exclude&gt;子元素时，它们定义一组要排除的项目工件坐标。如果不存在，则&lt;excludes&gt;不表示排除。</span></span><br><span class="line"><span class="comment">                工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                当存在这个时，插件将在生成的程序集中包含这个集合中包含的模块的源文件。</span></span><br><span class="line"><span class="comment">                包含用于在程序集中包含项目模块的源文件的配置选项。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--ModuleSources--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">sources</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    在计算受该集合影响的文件时，是否应该使用标准排除模式，例如那些匹配CVS和Subversion元数据文件的排除模式。为了向后兼容，默认值是true。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                    默认值是：true。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">useDefaultExcludes</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    设置输出目录相对于程序集根目录的根目录。例如，“日志”将把指定的文件放在日志目录中。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    （许多） 当&lt;include&gt;子元素存在时，它们定义一组要包含的文件和目录。如果不存在，则&lt;includes&gt;表示所有有效值。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    （许多） 当存在&lt;exclude&gt;子元素时，它们定义一组要排除的文件和目录。如果不存在，则&lt;excludes&gt;不表示排除。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    与UNIX权限类似，设置所包含文件的文件模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                    例如，值0644转换为用户读写，组和其他只读。默认值是0644</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fileMode</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    与UNIX权限类似，设置包含的目录的目录模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）[Format: (User)(Group)(Other) ] 其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                    例如，值0755转换为用户读写，Group和其他只读。默认值是0755.</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directoryMode</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    （许多） 指定包含在程序集中的每个包含模块的哪些文件组。fileSet通过提供一个或多个&lt;fileSet&gt;子元素来指定。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--List&lt;FileSet&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fileSets</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        fileSet允许将文件组包含到程序集中。</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            在计算受该集合影响的文件时，是否应该使用标准排除模式，例如那些匹配CVS和Subversion元数据文件的排除模式。为了向后兼容，默认值是true。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                            默认值是：true。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">useDefaultExcludes</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            设置输出目录相对于程序集根目录的根目录。例如，“日志”将把指定的文件放在日志目录中。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            （许多） 当&lt;include&gt;子元素存在时，它们定义一组要包含的文件和目录。如果不存在，则&lt;includes&gt;表示所有有效值。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            （许多） 当存在&lt;exclude&gt;子元素时，它们定义一组要排除的文件和目录。如果不存在，则&lt;excludes&gt;不表示排除。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            与UNIX权限类似，设置所包含文件的文件模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                            例如，值0644转换为用户读写，组和其他只读。默认值是0644.</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">fileMode</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            与UNIX权限类似，设置包含的目录的目录模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                            例如，值0755转换为用户读写，Group和其他只读。默认值是0755.</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">directoryMode</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            设置模块目录的绝对或相对位置。例如，“src / main / bin”会选择定义这个依赖关系的项目的这个子目录。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">directory</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            设置此文件集中文件的行结束符。有效值：</span></span><br><span class="line"><span class="comment">                            “keep” - 保留所有的行结束</span></span><br><span class="line"><span class="comment">                            “unix” - 使用Unix风格的行尾（即“\ n”）</span></span><br><span class="line"><span class="comment">                            “lf” - 使用一个换行符结束符（即“\ n”）</span></span><br><span class="line"><span class="comment">                            “dos” - 使用DOS / Windows风格的行尾（即“\ r \ n”）</span></span><br><span class="line"><span class="comment">                            “windows” - 使用DOS / Windows风格的行尾（即“\ r \ n”）</span></span><br><span class="line"><span class="comment">                            “crlf” - 使用回车，换行符结尾（即“\ r \ n”）</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">lineEnding</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            是否在复制文件时过滤符号，使用构建配置中的属性。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                            默认值是：false。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">filtered</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">fileSets</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    指定模块的finalName是否应该添加到应用于它的任何fileSets的outputDirectory值。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                    默认值是：true。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includeModuleDirectory</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    指定是否应从应用于该模块的文件集中排除当前模块下方的子模块目录。如果仅仅意味着复制与此ModuleSet匹配的确切模块列表的源，忽略（或单独处理）当前目录下目录中存在的模块，这可能会很有用。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                    默认值是：true。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludeSubModuleDirectories</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    设置此程序集中包含的所有模块基本目录的映射模式。注意：只有在includeModuleDirectory == true的情况下才会使用此字段。</span></span><br><span class="line"><span class="comment">                    缺省值是在 2.2-beta-1中是$ &#123;artifactId&#125;，以及后续版本中是$ &#123;module.artifactId&#125;。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                    默认值是：$ &#123;module.artifactId&#125;。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectoryMapping</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">sources</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    如果存在，插件将在生成的程序集中包含来自该组的所包含模块的二进制文件。</span></span><br><span class="line"><span class="comment">                    包含用于将项目模块的二进制文件包含在程序集中的配置选项。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--ModuleBinaries--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">binaries</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    设置输出目录相对于程序集根目录的根目录。例如，“log”会将指定的文件放在归档根目录下的日志目录中。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    （许多） 当存在&lt;include&gt;子元素时，它们定义一组要包含的工件坐标。如果不存在，则&lt;includes&gt;表示所有有效值。</span></span><br><span class="line"><span class="comment">                    工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                    另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    （许多） 当存在&lt;exclude&gt;子元素时，它们定义一组依赖项工件坐标以排除。如果不存在，则&lt;excludes&gt;不表示排除。</span></span><br><span class="line"><span class="comment">                    工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                    另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    与UNIX权限类似，设置所包含文件的文件模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                    例如，值0644转换为用户读写，组和其他只读。默认值是0644</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fileMode</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    与UNIX权限类似，设置包含的目录的目录模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）[Format: (User)(Group)(Other) ] 其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                    例如，值0755转换为用户读写，Group和其他只读。默认值是0755.</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directoryMode</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    指定时，attachmentClassifier将使汇编器查看附加到模块的工件，而不是主工程工件。如果能够找到与指定分类符匹配的附件，则会使用它; 否则，会抛出异常。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">attachmentClassifier</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    如果设置为true，插件将包含这里包含的项目模块的直接和传递依赖关系。否则，它将只包含模块包。</span></span><br><span class="line"><span class="comment">                    默认值是：true。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includeDependencies</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--List&lt;DependencySet&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependencySets</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        依赖关系集允许在程序集中包含和排除项目依赖关系。</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dependencySet</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                                设置输出目录相对于程序集根目录的根目录。例如，“log”会将指定的文件放在归档根目录下的日志目录中。</span></span><br><span class="line"><span class="comment">                            --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            （许多） 当存在&lt;include&gt;子元素时，它们定义一组要包含的工件坐标。如果不存在，则&lt;includes&gt;表示所有有效值。</span></span><br><span class="line"><span class="comment">                            工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                            另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            （许多） 当存在&lt;exclude&gt;子元素时，它们定义一组依赖项工件坐标以排除。如果不存在，则&lt;excludes&gt;不表示排除。</span></span><br><span class="line"><span class="comment">                            工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                            另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            与UNIX权限类似，设置所包含文件的文件模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                            例如，值0644转换为用户读写，组和其他只读。默认值是0644</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">fileMode</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            与UNIX权限类似，设置包含的目录的目录模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）[Format: (User)(Group)(Other) ] 其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                            例如，值0755转换为用户读写，Group和其他只读。默认值是0755.</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">directoryMode</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            如果指定为true，那么在程序集创建过程中任何用于过滤实际构件的包含/排除模式都将导致构建失败，并显示错误。这是为了强调过时的包含或排除，或者表示程序集描述符配置不正确。（从2.2开始）</span></span><br><span class="line"><span class="comment">                            默认值是：false。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">useStrictFiltering</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            为此程序集中包含的所有依赖项设置映射模式。（从2.2-beta-2开始； 2.2-beta-1使用$ &#123;artifactId&#125; - $ &#123;version&#125; $ &#123;dashClassifier？&#125;。$ &#123;extension&#125;作为默认值）。</span></span><br><span class="line"><span class="comment">                            默认值是：$ &#123;artifact.artifactId&#125; - $ &#123;artifact.version&#125; $ &#123;dashClassifier？&#125;。$ &#123;artifact.extension&#125;。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">outputFileNameMapping</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            如果设置为true，则此属性将所有依赖项解包到指定的输出目录中。设置为false时，依赖关系将被包含为档案（jar）。只能解压jar，zip，tar.gz和tar.bz压缩文件。</span></span><br><span class="line"><span class="comment">                            默认值是：false。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">unpack</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            允许指定包含和排除以及过滤选项，以指定从相关性工件解压缩的项目。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">unpackOptions</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                                （许多） 文件和/或目录模式的集合，用于匹配将在解压缩时从归档文件中包含的项目。每个项目被指定为&lt;include&gt; some / path &lt;/ include&gt;（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                            --&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                                （许多） 用于匹配项目的文件和/或目录模式的集合，在解压缩时将其从归档文件中排除。每个项目被指定为&lt;exclude&gt; some / path &lt;/ exclude&gt;（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                            --&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                                是否使用构建配置中的属性过滤从档案中解压缩的文件中的符号。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                                默认值是：false。</span></span><br><span class="line"><span class="comment">                            --&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">filtered</span>/&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                                设置文件的行尾。（从2.2开始）有效值：</span></span><br><span class="line"><span class="comment">                                “keep” - 保留所有的行结束</span></span><br><span class="line"><span class="comment">                                “unix” - 使用Unix风格的行结尾</span></span><br><span class="line"><span class="comment">                                “lf” - 使用单个换行符结束符</span></span><br><span class="line"><span class="comment">                                “dos” - 使用DOS风格的行尾</span></span><br><span class="line"><span class="comment">                                “ crlf ” - 使用Carraige返回，换行符结束</span></span><br><span class="line"><span class="comment">                            --&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">lineEnding</span>/&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                                在计算受该集合影响的文件时，是否应该使用标准排除模式，例如那些匹配CVS和Subversion元数据文件的排除模式。为了向后兼容，默认值是true。（从2.2开始）</span></span><br><span class="line"><span class="comment">                                默认值是：true。</span></span><br><span class="line"><span class="comment">                            --&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">useDefaultExcludes</span>/&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                                允许指定解压档案时使用的编码，支持指定编码的unarchiver。如果未指定，将使用归档程序默认值。Archiver默认值通常代表理智（modern）的values。</span></span><br><span class="line"><span class="comment">                            --&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">encoding</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">unpackOptions</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            为此dependencySet设置依赖项范围。</span></span><br><span class="line"><span class="comment">                            默认值是：runtime。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">scope</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            确定当前项目构建过程中产生的工件是否应该包含在这个依赖集中。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                            默认值是：true。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">useProjectArtifact</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            确定当前项目构建过程中产生的附件是否应该包含在这个依赖集中。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                            默认值是：false。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">useProjectAttachments</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            确定是否将传递依赖项包含在当前依赖项集的处理中。如果为true，那么include / excludes / useTransitiveFiltering将应用于传递依赖项构件以及主项目依赖项构件。</span></span><br><span class="line"><span class="comment">                            如果为false，则useTransitiveFiltering无意义，并且包含/排除仅影响项目的直接依赖关系。</span></span><br><span class="line"><span class="comment">                            默认情况下，这个值是真的。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                            默认值是：true。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">useTransitiveDependencies</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                            确定此依赖项集中的包含/排除模式是否将应用于给定工件的传递路径。</span></span><br><span class="line"><span class="comment">                            如果为真，并且当前工件是由包含或排除模式匹配的另一个工件引入的传递依赖性，则当前工件具有与其相同的包含/排除逻辑。</span></span><br><span class="line"><span class="comment">                            默认情况下，此值为false，以保持与2.1版的向后兼容性。这意味着包含/排除仅仅直接应用于当前的工件，而不应用于传入的工件。（从2.2-beta-1）</span></span><br><span class="line"><span class="comment">                            默认值为：false。</span></span><br><span class="line"><span class="comment">                        --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">useTransitiveFiltering</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dependencySet</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependencySets</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    如果设置为true，则此属性将所有模块包解包到指定的输出目录中。当设置为false时，模块包将作为归档（jar）包含在内。</span></span><br><span class="line"><span class="comment">                    默认值是：true。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">unpack</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    允许指定包含和排除以及过滤选项，以指定从相关性工件解压缩的项目。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">unpackOptions</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        （许多） 文件和/或目录模式的集合，用于匹配将在解压缩时从归档文件中包含的项目。每个项目被指定为&lt;include&gt; some / path &lt;/ include&gt;（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        （许多） 用于匹配项目的文件和/或目录模式的集合，在解压缩时将其从归档文件中排除。每个项目被指定为&lt;exclude&gt; some / path &lt;/ exclude&gt;（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        是否使用构建配置中的属性过滤从档案中解压缩的文件中的符号。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                        默认值是：false。</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">filtered</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        设置文件的行尾。（从2.2开始）有效值：</span></span><br><span class="line"><span class="comment">                        “keep” - 保留所有的行结束</span></span><br><span class="line"><span class="comment">                        “unix” - 使用Unix风格的行结尾</span></span><br><span class="line"><span class="comment">                        “lf” - 使用单个换行符结束符</span></span><br><span class="line"><span class="comment">                        “dos” - 使用DOS风格的行尾</span></span><br><span class="line"><span class="comment">                        “ crlf ” - 使用Carraige返回，换行符结束</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">lineEnding</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        在计算受该集合影响的文件时，是否应该使用标准排除模式，例如那些匹配CVS和Subversion元数据文件的排除模式。为了向后兼容，默认值是true。（从2.2开始）</span></span><br><span class="line"><span class="comment">                        默认值是：true。</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">useDefaultExcludes</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        允许指定解压档案时使用的编码，支持指定编码的unarchiver。如果未指定，将使用归档程序默认值。Archiver默认值通常代表理智（modern）的values。</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">unpackOptions</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    设置此程序集中包含的所有非UNPACKED依赖关系的映射模式。（由于2.2-beta-2; 2.2-beta-1使用$ &#123;artifactId&#125; - $ &#123;version&#125; $ &#123;dashClassifier？&#125;。$ &#123;extension&#125;作为默认值）注意：如果dependencySet指定unpack == true，则outputFileNameMapping将不要使用; 在这些情况下，使用outputDirectory。有关可用于outputFileNameMapping参数的条目的更多详细信息，请参阅插件FAQ。</span></span><br><span class="line"><span class="comment">                    默认值是：$ &#123;module.artifactId&#125; - $ &#123;module.version&#125; $ &#123;dashClassifier？&#125;。$ &#123;module.extension&#125;。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputFileNameMapping</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">binaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">moduleSet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">moduleSets</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        （许多） 指定在程序集中包含哪些文件组。fileSet通过提供一个或多个&lt;fileSet&gt;子元素来指定。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List&lt;FileSet&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fileSets</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            fileSet允许将文件组包含到程序集中。</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                在计算受该集合影响的文件时，是否应该使用标准排除模式，例如那些匹配CVS和Subversion元数据文件的排除模式。为了向后兼容，默认值是true。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                默认值是：true。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">useDefaultExcludes</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                设置输出目录相对于程序集根目录的根目录。例如，“日志”将把指定的文件放在日志目录中。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                （许多） 当&lt;include&gt;子元素存在时，它们定义一组要包含的文件和目录。如果不存在，则&lt;includes&gt;表示所有有效值。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                （许多） 当存在&lt;exclude&gt;子元素时，它们定义一组要排除的文件和目录。如果不存在，则&lt;excludes&gt;不表示排除。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                与UNIX权限类似，设置所包含文件的文件模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                例如，值0644转换为用户读写，组和其他只读。默认值是0644.</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileMode</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                与UNIX权限类似，设置包含的目录的目录模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                例如，值0755转换为用户读写，Group和其他只读。默认值是0755.</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directoryMode</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                设置模块目录的绝对或相对位置。例如，“src / main / bin”会选择定义这个依赖关系的项目的这个子目录。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                设置此文件集中文件的行结束符。有效值：</span></span><br><span class="line"><span class="comment">                “keep” - 保留所有的行结束</span></span><br><span class="line"><span class="comment">                “unix” - 使用Unix风格的行尾（即“\ n”）</span></span><br><span class="line"><span class="comment">                “lf” - 使用一个换行符结束符（即“\ n”）</span></span><br><span class="line"><span class="comment">                “dos” - 使用DOS / Windows风格的行尾（即“\ r \ n”）</span></span><br><span class="line"><span class="comment">                “windows” - 使用DOS / Windows风格的行尾（即“\ r \ n”）</span></span><br><span class="line"><span class="comment">                “crlf” - 使用回车，换行符结尾（即“\ r \ n”）</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">lineEnding</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                是否在复制文件时过滤符号，使用构建配置中的属性。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                默认值是：false。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtered</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fileSets</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        （许多） 指定在程序集中包含哪些单个文件。通过提供一个或多个&lt;file&gt;子元素来指定文件。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List&lt;FileItem&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">files</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            一个文件允许单个文件包含选项来更改不受fileSets支持的目标文件名。</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                设置要包含在程序集中的文件的模块目录的绝对路径或相对路径。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">source</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                设置输出目录相对于程序集根目录的根目录。例如，“日志”将把指定的文件放在日志目录中。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                在outputDirectory中设置目标文件名。默认是与源文件相同的名称。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">destName</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                与UNIX权限类似，设置所包含文件的文件模式。这是一个八卦价值。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                例如，值0644转换为用户读写，组和其他只读。默认值是0644</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileMode</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                设置此文件中文件的行结束符。有效值是：</span></span><br><span class="line"><span class="comment">                “keep” - 保留所有的行结束</span></span><br><span class="line"><span class="comment">                “unix” - 使用Unix风格的行尾（即“\ n”）</span></span><br><span class="line"><span class="comment">                “lf” - 使用一个换行符结束符（即“\ n”）</span></span><br><span class="line"><span class="comment">                “dos” - 使用DOS / Windows风格的行尾（即“\ r \ n”）</span></span><br><span class="line"><span class="comment">                “windows” - 使用DOS / Windows风格的行尾（即“\ r \ n”）</span></span><br><span class="line"><span class="comment">                “crlf” - 使用回车，换行符结尾（即“\ r \ n”）</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">lineEnding</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                设置是否确定文件是否被过滤。</span></span><br><span class="line"><span class="comment">                默认值是：false。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtered</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">files</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List&lt;DependencySet&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencySets</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            依赖关系集允许在程序集中包含和排除项目依赖关系。</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencySet</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    设置输出目录相对于程序集根目录的根目录。例如，“log”会将指定的文件放在归档根目录下的日志目录中。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                （许多） 当存在&lt;include&gt;子元素时，它们定义一组要包含的工件坐标。如果不存在，则&lt;includes&gt;表示所有有效值。</span></span><br><span class="line"><span class="comment">                工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                （许多） 当存在&lt;exclude&gt;子元素时，它们定义一组依赖项工件坐标以排除。如果不存在，则&lt;excludes&gt;不表示排除。</span></span><br><span class="line"><span class="comment">                工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                与UNIX权限类似，设置所包含文件的文件模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                例如，值0644转换为用户读写，组和其他只读。默认值是0644</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileMode</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                与UNIX权限类似，设置包含的目录的目录模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）[Format: (User)(Group)(Other) ] 其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                例如，值0755转换为用户读写，Group和其他只读。默认值是0755.</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directoryMode</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                如果指定为true，那么在程序集创建过程中任何用于过滤实际构件的包含/排除模式都将导致构建失败，并显示错误。这是为了强调过时的包含或排除，或者表示程序集描述符配置不正确。（从2.2开始）</span></span><br><span class="line"><span class="comment">                默认值是：false。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">useStrictFiltering</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                为此程序集中包含的所有依赖项设置映射模式。（从2.2-beta-2开始； 2.2-beta-1使用$ &#123;artifactId&#125; - $ &#123;version&#125; $ &#123;dashClassifier？&#125;。$ &#123;extension&#125;作为默认值）。</span></span><br><span class="line"><span class="comment">                默认值是：$ &#123;artifact.artifactId&#125; - $ &#123;artifact.version&#125; $ &#123;dashClassifier？&#125;。$ &#123;artifact.extension&#125;。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputFileNameMapping</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                如果设置为true，则此属性将所有依赖项解包到指定的输出目录中。设置为false时，依赖关系将被包含为档案（jar）。只能解压jar，zip，tar.gz和tar.bz压缩文件。</span></span><br><span class="line"><span class="comment">                默认值是：false。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">unpack</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                允许指定包含和排除以及过滤选项，以指定从相关性工件解压缩的项目。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">unpackOptions</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    （许多） 文件和/或目录模式的集合，用于匹配将在解压缩时从归档文件中包含的项目。每个项目被指定为&lt;include&gt; some / path &lt;/ include&gt;（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    （许多） 用于匹配项目的文件和/或目录模式的集合，在解压缩时将其从归档文件中排除。每个项目被指定为&lt;exclude&gt; some / path &lt;/ exclude&gt;（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    是否使用构建配置中的属性过滤从档案中解压缩的文件中的符号。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                    默认值是：false。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtered</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    设置文件的行尾。（从2.2开始）有效值：</span></span><br><span class="line"><span class="comment">                    “keep” - 保留所有的行结束</span></span><br><span class="line"><span class="comment">                    “unix” - 使用Unix风格的行结尾</span></span><br><span class="line"><span class="comment">                    “lf” - 使用单个换行符结束符</span></span><br><span class="line"><span class="comment">                    “dos” - 使用DOS风格的行尾</span></span><br><span class="line"><span class="comment">                    “crlf ” - 使用Carraige返回，换行符结束</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">lineEnding</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    在计算受该集合影响的文件时，是否应该使用标准排除模式，例如那些匹配CVS和Subversion元数据文件的排除模式。为了向后兼容，默认值是true。（从2.2开始）</span></span><br><span class="line"><span class="comment">                    默认值是：true。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">useDefaultExcludes</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    允许指定解压档案时使用的编码，支持指定编码的unarchiver。如果未指定，将使用归档程序默认值。Archiver默认值通常代表理智（modern）的values。</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">unpackOptions</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                为此dependencySet设置依赖项范围。</span></span><br><span class="line"><span class="comment">                默认值是：runtime。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                确定当前项目构建过程中产生的工件是否应该包含在这个依赖集中。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                默认值是：true。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">useProjectArtifact</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                确定当前项目构建过程中产生的附件是否应该包含在这个依赖集中。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                默认值是：false。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">useProjectAttachments</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                确定是否将传递依赖项包含在当前依赖项集的处理中。如果为true，那么include / excludes / useTransitiveFiltering将应用于传递依赖项构件以及主项目依赖项构件。</span></span><br><span class="line"><span class="comment">                如果为false，则useTransitiveFiltering无意义，并且包含/排除仅影响项目的直接依赖关系。</span></span><br><span class="line"><span class="comment">                默认情况下，这个值是真的。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                默认值是：true。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">useTransitiveDependencies</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                确定此依赖项集中的包含/排除模式是否将应用于给定工件的传递路径。</span></span><br><span class="line"><span class="comment">                如果为真，并且当前工件是由包含或排除模式匹配的另一个工件引入的传递依赖性，则当前工件具有与其相同的包含/排除逻辑。</span></span><br><span class="line"><span class="comment">                默认情况下，此值为false，以保持与2.1版的向后兼容性。这意味着包含/排除仅仅直接应用于当前的工件，而不应用于传入的工件。（从2.2-beta-1）</span></span><br><span class="line"><span class="comment">                默认值为：false。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">useTransitiveFiltering</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencySet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencySets</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        定义要包含在程序集中的Maven仓库。可用于存储库中的工件是项目的依赖工件。创建的存储库包含所需的元数据条目，并且还包含sha1和md5校验和。这对创建将被部署到内部存储库的档案很有用。</span></span><br><span class="line"><span class="comment">        注意：目前，只有来自中央存储库的工件才被允许。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List&lt;Repository&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                设置输出目录相对于程序集根目录的根目录。例如，“log”会将指定的文件放在归档根目录下的日志目录中。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                （许多） 当存在&lt;include&gt;子元素时，它们定义一组包含的项目坐标。如果不存在，则&lt;includes&gt;表示所有有效值。</span></span><br><span class="line"><span class="comment">                工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                （许多） 当存在&lt;exclude&gt;子元素时，它们定义一组要排除的项目工件坐标。如果不存在，则&lt;excludes&gt;不表示排除。</span></span><br><span class="line"><span class="comment">                工件坐标可以以简单的groupId：artifactId形式给出，或者可以以groupId：artifactId：type [：classifier]：version的形式完全限定。</span></span><br><span class="line"><span class="comment">                另外，可以使用通配符，如*：maven- *</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    与UNIX权限类似，设置所包含文件的文件模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                    例如，值0644转换为用户读写，组和其他只读。默认值是0644</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileMode</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                与UNIX权限类似，设置包含的目录的目录模式。这是一个 OCTAL VALUE。格式：（用户）（组）（其他）[Format: (User)(Group)(Other) ] 其中每个组件是Read = 4，Write = 2和Execute = 1的总和。</span></span><br><span class="line"><span class="comment">                例如，值0755转换为用户读写，Group和其他只读。默认值是0755.</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directoryMode</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                如果设置为true，则此属性将触发创建存储库元数据，这将允许存储库用作功能性远程存储库。</span></span><br><span class="line"><span class="comment">                默认值是：false。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--boolean--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includeMetadata</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                （许多） 指定要将一组工件与指定的版本对齐。groupVersionAlignment通过提供一个或多个&lt;groupVersionAlignment&gt;子元素来指定。</span></span><br><span class="line"><span class="comment">                允许一组工件与指定的版本对齐。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--List&lt;GroupVersionAlignment&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupVersionAlignments</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupVersionAlignment</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        要为其对齐版本的工件的groupId。</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        您想要将该组对齐的版本。</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                        （许多） 当存在&lt;exclude&gt;子元素时，它们定义要排除的构件的artifactIds。如果不存在，则&lt;excludes&gt;不表示排除。排除是通过提供一个或多个&lt;exclude&gt;子元素来指定的。</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">groupVersionAlignment</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">groupVersionAlignments</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                指定此存储库中包含的工件的范围。（从2.2-beta-1开始）</span></span><br><span class="line"><span class="comment">                默认值是：runtime。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--string--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        （许多） 指定要包含在程序集中的共享组件xml文件位置。指定的位置必须相对于描述符的基本位置。</span></span><br><span class="line"><span class="comment">        如果描述符是通过类路径中的&lt;descriptorRef /&gt;元素找到的，那么它指定的任何组件也将在类路径中找到。</span></span><br><span class="line"><span class="comment">        如果通过路径名通过&lt;descriptor /&gt;元素找到，则此处的值将被解释为相对于项目basedir的路径。</span></span><br><span class="line"><span class="comment">        当找到多个componentDescriptors时，它们的内容被合并。检查 描述符组件 了解更多信息。</span></span><br><span class="line"><span class="comment">        componentDescriptor通过提供一个或多个&lt;componentDescriptor&gt;子元素来指定。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--List&lt;String&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">componentDescriptors</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="Maven" scheme="https://yaoyinglong.github.io/categories/Maven/"/>
    
    
      <category term="Maven" scheme="https://yaoyinglong.github.io/tags/Maven/"/>
    
      <category term="Assembly" scheme="https://yaoyinglong.github.io/tags/Assembly/"/>
    
  </entry>
  
  <entry>
    <title>Spring线程池跨线程数据共享</title>
    <link href="https://yaoyinglong.github.io/Blog/%E6%A1%86%E6%9E%B6/Spring/Spring%E7%BA%BF%E7%A8%8B%E6%B1%A0%E8%B7%A8%E7%BA%BF%E7%A8%8B%E6%95%B0%E6%8D%AE%E5%85%B1%E4%BA%AB/"/>
    <id>https://yaoyinglong.github.io/Blog/框架/Spring/Spring线程池跨线程数据共享/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2019-10-28T03:24:44.625Z</updated>
    
    <content type="html"><![CDATA[<p>在<code>Spring Cloud</code>中可能会用到<code>sleuth</code>做链路追踪，以及内部链路中需要用到Header中得一些数据，在单线程是没有问题得，但是在某些场景下就会有问题，比如上层业务系统得一个请求需要同时并发去调用基础服务得多个产品，这样请求到其他服务得链路追踪信息就不一样了等。</p><p>为了实现多线程并发情况下<strong>主线程</strong>和<strong>线程池的线程</strong>共享<code>ThreadLocal</code>变量，如<code>MDC</code>、<code>RequestAttributes</code>中的数据，需要自定义<strong>线程池</strong>及<strong>线程实现</strong>。</p><p>自定义线程池继承<code>ThreadPoolTaskExecutor</code>类重写<code>execute</code>和<code>submit</code>方法即可，<code>Spring</code>的<code>ExecutorMethodInterceptor</code>会拦截使用<code>LazyTraceThreadPoolTaskExecutor</code>装饰实际执行的<code>task</code>然后调用当前<code>executor</code>执行。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CusThreadPoolExecutor</span> <span class="keyword">extends</span> <span class="title">ThreadPoolTaskExecutor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Runnable task)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes servletRequestAttributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        Map&lt;String, String&gt; contextOfMDC = MDC.getCopyOfContextMap();</span><br><span class="line">        Runnable cusTask = <span class="keyword">new</span> CusInheritThreadVarRunnable(servletRequestAttributes, contextOfMDC, task);</span><br><span class="line">        <span class="keyword">super</span>.execute(cusTask);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">Future&lt;T&gt; <span class="title">submit</span><span class="params">(Callable&lt;T&gt; task)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes servletRequestAttributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        Map&lt;String, String&gt; contextOfMDC = MDC.getCopyOfContextMap();</span><br><span class="line">        Callable&lt;T&gt; cusTask = <span class="keyword">new</span> CusInheritThreadVarCallable&lt;T&gt;(servletRequestAttributes, contextOfMDC, task);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.submit(cusTask);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该线程池的使用和普通的线程池使用是一样。 只是在在提交到真正的线程池之前，会获取主线程中需要共享的<code>ThreadLocal</code>相关变量。然后将任务包装成一个新的<code>Runnable</code>或<code>Callable</code>，在子线程中执行任务之前，将<code>ThreadLocal</code>相关变量设置到子线程的<code>ThreadLocalMap</code>中，执行结束之前清空设置的<code>ThreadLocal</code>相关变量，防止不同线程中串数据。</p><p><code>Callable</code>实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CusInheritThreadVarCallable</span>&lt;<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Callable&lt;V&gt; delegate;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; contextOfMDC;</span><br><span class="line">    <span class="keyword">private</span> ServletRequestAttributes servletRequestAttributes;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CusInheritThreadVarCallable</span><span class="params">(ServletRequestAttributes servletRequestAttributes, Map&lt;String, String&gt; contextOfMDC, Callable&lt;V&gt; delegate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.contextOfMDC = contextOfMDC;</span><br><span class="line">        <span class="keyword">this</span>.servletRequestAttributes = servletRequestAttributes;</span><br><span class="line">        <span class="keyword">this</span>.delegate = delegate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> V <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        RestStrategyContext.clearCurrentContext();</span><br><span class="line">        <span class="comment">//设置当前线程servletRequestAttributes</span></span><br><span class="line">        RequestContextHolder.setRequestAttributes(servletRequestAttributes);</span><br><span class="line">        <span class="comment">//设置当前线程MDC</span></span><br><span class="line">        MDC.setContextMap(contextOfMDC);</span><br><span class="line">        V result;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = delegate.call();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            MDC.clear();</span><br><span class="line">            RequestContextHolder.resetRequestAttributes();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  <code>Runnable</code>实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CusInheritThreadVarRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Runnable delegate;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; contextOfMDC;</span><br><span class="line">    <span class="keyword">private</span> ServletRequestAttributes servletRequestAttributes;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CusInheritThreadVarRunnable</span><span class="params">(ServletRequestAttributes servletRequestAttributes, Map&lt;String, String&gt; contextOfMDC, Runnable delegate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.contextOfMDC = contextOfMDC;</span><br><span class="line">        <span class="keyword">this</span>.servletRequestAttributes = servletRequestAttributes;</span><br><span class="line">        <span class="keyword">this</span>.delegate = delegate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RestStrategyContext.clearCurrentContext();</span><br><span class="line">        <span class="comment">//设置当前线程servletRequestAttributes</span></span><br><span class="line">        RequestContextHolder.setRequestAttributes(servletRequestAttributes);</span><br><span class="line">        <span class="comment">//设置当前线程MDC</span></span><br><span class="line">        MDC.setContextMap(contextOfMDC);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 执行</span></span><br><span class="line">            delegate.run();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 清空</span></span><br><span class="line">            MDC.clear();</span><br><span class="line">            RequestContextHolder.resetRequestAttributes();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>线程池的配置如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span>(name = <span class="string">"processorExecutor"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ThreadPoolTaskExecutor <span class="title">taskProcessorExecutor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    CusThreadPoolExecutor executor = <span class="keyword">new</span> CusThreadPoolExecutor();</span><br><span class="line">    executor.setCorePoolSize(taskPoolConfig.getCorePoolSize());</span><br><span class="line">    executor.setMaxPoolSize(taskPoolConfig.getMaxPoolSize());</span><br><span class="line">    executor.setQueueCapacity(taskPoolConfig.getQueueCapacity());</span><br><span class="line">    executor.setKeepAliveSeconds(taskPoolConfig.getKeepAliveSeconds());</span><br><span class="line">    executor.setThreadNamePrefix(<span class="string">"CusTask-"</span>);</span><br><span class="line">    executor.setRejectedExecutionHandler(cusCallerRunsPolicy);</span><br><span class="line">    executor.setWaitForTasksToCompleteOnShutdown(<span class="keyword">true</span>);</span><br><span class="line">    executor.setAwaitTerminationSeconds(taskPoolConfig.getAwaitTerminationSeconds());</span><br><span class="line">    executor.initialize();</span><br><span class="line">    <span class="keyword">return</span> executor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于线程池的配置需要注意的是，拒绝策略不要使用<code>CallerRunsPolicy</code>拒绝策略，该拒绝策略会在任务添加到线程池被<strong>拒绝</strong>时使用<strong>主线程</strong>执行该任务。在并发较高的情况下，拒绝策略生效，导致很多任务由主线程执行了，从而导致主线程中的<code>MDC</code>数据被清空了，从而导致一些trace信息丢失。可以自定义拒绝策略将任务丢回队列：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CusCallerRunsPolicy</span> <span class="keyword">implements</span> <span class="title">RejectedExecutionHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rejectedExecution</span><span class="params">(Runnable r, ThreadPoolExecutor executor)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!executor.isShutdown()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                executor.getQueue().put(r);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                log.error(<span class="string">"Reject policy interrupted exception "</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在&lt;code&gt;Spring Cloud&lt;/code&gt;中可能会用到&lt;code&gt;sleuth&lt;/code&gt;做链路追踪，以及内部链路中需要用到Header中得一些数据，在单线程是没有问题得，但是在某些场景下就会有问题，比如上层业务系统得一个请求需要同时并发去调用基础服务得多个产品
      
    
    </summary>
    
      <category term="框架" scheme="https://yaoyinglong.github.io/categories/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="https://yaoyinglong.github.io/categories/%E6%A1%86%E6%9E%B6/Spring/"/>
    
    
      <category term="Spring，线程池" scheme="https://yaoyinglong.github.io/tags/Spring%EF%BC%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>Win实用工具</title>
    <link href="https://yaoyinglong.github.io/Blog/%E6%9D%82%E8%AE%B0/Win%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>https://yaoyinglong.github.io/Blog/杂记/Win实用工具/</id>
    <published>2019-07-29T16:00:00.000Z</published>
    <updated>2020-06-19T01:57:12.125Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PotPlayer"><a href="#PotPlayer" class="headerlink" title="PotPlayer"></a>PotPlayer</h3><p>非常好用的视频播放器。</p><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>轻便简洁的Markdown编辑器，支持即时渲染</p><h3 id="TeamViewer"><a href="#TeamViewer" class="headerlink" title="TeamViewer"></a>TeamViewer</h3><p>用于远程控制的应用程序</p><h3 id="Notepad"><a href="#Notepad" class="headerlink" title="Notepad++"></a>Notepad++</h3><p>文本编辑器</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PotPlayer&quot;&gt;&lt;a href=&quot;#PotPlayer&quot; class=&quot;headerlink&quot; title=&quot;PotPlayer&quot;&gt;&lt;/a&gt;PotPlayer&lt;/h3&gt;&lt;p&gt;非常好用的视频播放器。&lt;/p&gt;
&lt;h3 id=&quot;Typora&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="杂记" scheme="https://yaoyinglong.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="工具" scheme="https://yaoyinglong.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>JAVA实用工具</title>
    <link href="https://yaoyinglong.github.io/Blog/%E6%9D%82%E8%AE%B0/JAVA%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>https://yaoyinglong.github.io/Blog/杂记/JAVA实用工具/</id>
    <published>2019-05-31T16:00:00.000Z</published>
    <updated>2020-06-19T01:57:12.124Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Arthas"><a href="#Arthas" class="headerlink" title="Arthas"></a>Arthas</h3><p>Java 线上诊断工具</p><h3 id="EasyExcel"><a href="#EasyExcel" class="headerlink" title="EasyExcel"></a>EasyExcel</h3><p>用来对 Java 进行解析、生成 Excel 的框架，它重写了 poi 对 07 版 Excel 的解析，原本一个 3M 的 Excel 用 POI sax 需要 100M 左右内存，EasyExcel 可降低到 KB 级别，并且再大的 excel 也不会出现内存溢出的情况。03 版依赖 POI 的 sax 模式。在上层做了模型转换的封装，让使用者更加简单方便。</p><h3 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a>Postman</h3><p>接口调试工具</p><h3 id="LoadRunner"><a href="#LoadRunner" class="headerlink" title="LoadRunner"></a>LoadRunner</h3><p>压测工具</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Arthas&quot;&gt;&lt;a href=&quot;#Arthas&quot; class=&quot;headerlink&quot; title=&quot;Arthas&quot;&gt;&lt;/a&gt;Arthas&lt;/h3&gt;&lt;p&gt;Java 线上诊断工具&lt;/p&gt;
&lt;h3 id=&quot;EasyExcel&quot;&gt;&lt;a href=&quot;#EasyExcel
      
    
    </summary>
    
      <category term="杂记" scheme="https://yaoyinglong.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="工具" scheme="https://yaoyinglong.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
